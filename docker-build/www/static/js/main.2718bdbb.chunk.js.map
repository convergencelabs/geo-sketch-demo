{"version":3,"sources":["components/ChatMessages/styles.module.css","components/arcgis/MainArcGisMap/styles.module.css","components/arcgis/LatLongWidget/styles.module.css","components/CollaborativeTextArea/styles.module.css","components/PresenceList/styles.module.css","components/ChatPanel/styles.module.css","components/ChatInput/styles.module.css","components/SideBarTitle/styles.module.css","components/arcgis/EditorWidget/styles.module.css","components/arcgis/FormatingWidget/styles.module.css","components/Login/styles.module.css","utils/ArcGisLoader.ts","components/arcgis/RemoteStateGraphic/index.tsx","utils/color-util.ts","components/arcgis/RemotePointerGraphic/index.tsx","components/arcgis/RemoteStateLayer/index.tsx","components/arcgis/RemotePointerLayer/index.tsx","utils/rateLimit.ts","components/arcgis/LatLongWidget/index.tsx","models/RemoteState.ts","stores/SharedStateStore.ts","stores/PointerStore.ts","models/RemoteSelection.ts","stores/ModelStore.ts","stores/ViewportStore.ts","models/GeoSketchSessionUser.ts","stores/ParticipantStore.ts","models/ChatMessage.ts","stores/ChatStore.ts","stores/BasemapStore.ts","utils/GraphicAdapter.ts","stores/FormattingStore.ts","stores/SketchStore.ts","stores/stores.ts","utils/uuid.ts","components/arcgis/SketchWidget/index.tsx","models/ParticipantAction.ts","components/arcgis/RemoteSelectedGraphic/index.tsx","components/arcgis/RemoteSelectedGraphics/index.tsx","components/arcgis/RemoteSelectionLayer/index.tsx","components/arcgis/BasemapWidget/index.tsx","components/ColorPickerButton/index.tsx","components/arcgis/FormatingWidget/index.tsx","components/CollaborativeTextArea/index.tsx","components/arcgis/EditorWidget/index.tsx","components/arcgis/RemoteSketchGraphic/index.tsx","components/arcgis/RemoteSketchLayer/index.tsx","components/arcgis/MainArcGisMap/index.tsx","components/arcgis/RemoteViewportGraphic/index.tsx","components/arcgis/RemoteViewportLayer/index.tsx","components/arcgis/OverviewArcGisMap/index.tsx","components/TitleBar/index.tsx","components/PresenceListItem/index.tsx","components/PresenceList/index.tsx","components/ChatMessageItem/index.tsx","components/ChatMessages/index.tsx","components/ChatInput/index.tsx","components/ChatPanel/index.tsx","components/SideBarTitle/index.tsx","components/SideBar/index.tsx","components/Login/index.tsx","constants/config.ts","utils/ConnectionManager.ts","components/GeoSketch/index.tsx","serviceWorker.ts","index.tsx","utils/example-id.js.ts","components/ColorPickerButton/styles.module.css","components/arcgis/OverviewArcGisMap/styles.module.css","components/SideBar/styles.module.css","components/PresenceListItem/styles.module.css","components/ChatMessageItem/styles.module.css","components/TitleBar/styles.module.css","assets/images/logo.png","components/GeoSketch/styles.module.css"],"names":["module","exports","modules","esri","ArcGisLoader","loadCss","loadModules","resolved","forEach","index","path","split","shift","currentTarget","i","length","p","undefined","RemoteStateGraphic","props","useState","graphic","setGraphic","item","layer","update","create","useEffect","add","remove","colorAssigner","ColorAssigner","Palettes","DARK_12","reactColorToEsriColor","color","r","g","b","a","colorArray","push","Color","RemotePointerGraphic","pointer","createPointer","state","geometry","Point","value","getColor","user","userId","toGuid","symbol","symbols","SimpleMarkerSymbol","style","outline","PointerPath","xoffset","yoffset","Graphic","RemoteStateLayer","setLayer","l","layers","GraphicsLayer","map","rendered","remoteItems","renderer","RemotePointerLayer","pointers","key","sessionId","rateLimitWithCancel","callback","minIntervalMs","lastEventTime","finalEventTimerId","context","this","args","arguments","time","Date","now","delta","apply","clearTimeout","setTimeout","cancel","LatLongWidget","position","widgetRef","useRef","ddToDMS","y","x","toString","className","styles","latLonWidget","ref","dd","lat","d","Number","m","s","direction","Math","abs","round","RemoteState","Object","freeze","SharedStateStore","stateKey","defaultLocalState","_defaultLocalState","_stateKey","_activity","_onUpdateState","e","participant","local","has","newRemoteState","_createModel","setRemoteState","_onRemoveState","remoteStateMap","delete","Map","localState","activity","participants","filter","set","events","subscribe","ActivityStateSetEvent","ActivityStateRemovedEvent","ActivitySessionJoinedEvent","ActivitySessionLeftEvent","setLocalState","setState","removeState","remoteState","get","Array","from","values","observable","action","computed","PointerStore","RemoteSelection","objects","ModelStore","_selectionReference","remoteSelection","remoteSelectionMap","remoteSelections","model","elementReference","share","re","RemoteReferenceCreatedEvent","reference","_handleNewReference","references","selection","selected","setRemoteSelection","isLocal","refSub","ReferenceSetEvent","src","ElementReference","_setReference","ReferenceClearedEvent","removeRemoteSelection","ReferenceDisposedEvent","unsubscribe","isSet","ViewportStore","GeoSketchSessionUser","ParticipantStore","participantJoined","participantLeft","participantAction","ChatMessage","eventId","timestamp","message","ChatStore","_room","room","getHistory","limit","forward","eventFilter","then","result","data","prependHistoryEntry","ChatMessageEvent","appendChatMessage","eventNumber","messages","entry","MessageChatHistoryEntry","unshift","send","catch","console","error","BasemapStore","initialBasemap","GraphicAdapter","options","_onTransform","_onVertexChange","_graphic","_rtGraphic","_rtGeometry","_lineSymbol","_rtLineSymbol","_fillSymbol","_rtFillSymbol","_rtTitle","_rtDescription","_segmentKey","_id","id","realTimeObject","onTransform","onVertexChange","_bindSymbol","elementAt","on","RealTimeObject","Events","DETACHED","onRemove","hasKey","_bindToPoly","Error","_bindToPoint","__convergenceAdapter","rto","RealTimeNumber","VALUE","segments","newSegments","toJSON","curGeom","support","jsonUtils","fromJSON","MODEL_CHANGED","modelChangedEvent","event","childEvent","relativePath","ArraySetValueEvent","segment","point","newVal","element","newPoint","setPoint","ArrayInsertEvent","insertPoint","ArrayRemoveEvent","removePoint","rta","_setColor","thickness","width","vertices","startBatch","vertex","segmentIndex","insert","pointIndex","completeBatch","v","type","rings","paths","segmentKey","getPoint","updatedPoint","_getSegments","removeFromParent","rtSymbol","evt","_toEsriColor","original","Symbol","c","rtColor","FormattingStore","graphics","getAdapter","getRealTimeObject","fillColor","lineThickness","lineColor","SketchStore","pointerStore","viewportStore","basemapStore","modelStore","participantStore","chatStore","formattingStore","sketchStore","storesContext","React","createContext","useStores","useContext","createUUID","dt","getTime","replace","random","floor","ParticipantActionType","SketchWidget","view","sketch","widgets","Sketch","creationMode","ui","bindGraphic","rte","bind","updateGraphics","includes","viewModel","activeComponent","refresh","addFeature","feature","sendSketch","sketchGeom","features","f","SET","clearLocalState","json","attributes","title","description","tool","setGeometry","toolEventInfo","mover","pathIndex","updateVertex","coords","coordinates","componentIndex","vertexIndex","addVertices","deleteVertices","toArray","setSelectedGraphics","setLocalSelection","ParticipantAction","actionType","PREVIEW","GOTO","LINK","translatePoint","dx","dy","currentPoint","sp","toScreen","toMap","createOutline","mapView","Polygon","fromExtent","extent","RemoteSelectedGraphic","geometryHandle","zoomHandle","selectionGraphic","core","watchUtils","watch","RemoteSelectedGraphics","adapter","getAdapterFromRealTimeObject","getGraphic","Fragment","RemoteSelectionLayer","observer","selectionLayer","setSelectionLayer","selections","rs","BasemapWidget","basemapGallery","BasemapGallery","container","document","createElement","bgExpand","Expand","content","collapse","ColorPickerButton","show","setShow","onChange","colorStyle","background","picker","swatch","onClick","popover","cover","rgb","FormattingWidget","formattingWidget","row","button","icon","faFill","setFillColor","faSlash","setLineColor","faGripLines","min","target","setLineThickness","SharedTextArea","taRef","stringModel","localReference","rangeReference","textarea","current","selectionStart","selectionEnd","addEventListener","isShared","unshare","sendLocalSelection","textEditor","CollaborativeTextArea","control","onInsert","onDelete","onSelectionChanged","selectionManager","getSelection","start","anchor","end","addSelection","getColorAsHex","remoteRange","addCollaborator","displayName","removeCollaborator","collaborator","getCollaborator","setSelection","synthetic","flashCursorToolTip","stringEvents","StringInsertEvent","insertText","StringRemoveEvent","deleteText","newReference","isDisposed","dispose","collabTextArea","EditorWidget","expanded","setExpanded","getDescriptionAttribute","getTitleAttribute","faChevronLeft","faEdit","widgetClass","collapsed","expanderButton","editorWidget","titleInput","label","setAttribute","descriptionInput","RemoteSketchGraphic","createSketch","lineSymbol","SimpleLineSymbol","SimpleFillSymbol","RemoteSketchLayer","sketches","MainArcGisMap","mapRef","setView","previousExtent","setPreviousExtent","previousBasemap","setPreviousBasemap","basemap","Basemap","portalItem","views","MapView","center","zoom","when","log","pointerCallback","longitude","latitude","moveHandle","leaveHandle","components","extentCallback","xmin","xmax","ymin","ymax","extentHandle","basemapHandle","destroy","remoteViewport","remoteBasemap","spatialReference","wkid","Extent","mainMap","RemoteViewportGraphic","viewport","createViewport","RemoteViewportLayer","viewports","OverviewArcGisMap","open","setOpen","stopPropagation","keyPressed","indexOf","viewportLayer","opened","closed","toggle","arrow","TitleBar","titleBar","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","logo","alt","href","rel","faGithub","text","window","location","onCopy","toast","success","faShareSquare","faExternalLinkAlt","PresenceListItem","linkedUser","onPreview","onGoto","onLink","onClear","disabled","enabled","linkClass","linked","username","actions","faEye","size","onMouseEnter","onMouseLeave","faExternalLinkSquareAlt","faLink","presenceItem","borderColor","PresenceList","setParticipantAction","preview","goto","link","users","sort","u","localeCompare","userComponents","presenceList","ChatMessageItem","online","moment","format","additionalStyles","chatMessage","meta","ChatMessages","containerRef","messageCount","setMessageCount","scrollTop","scrollHeight","clientHeight","find","equals","chatMessages","ChatInput","inputRef","chatInput","placeholder","onKeyDown","keyCode","shiftKey","sedMessage","preventDefault","rows","ChatPanel","chatPanel","SideBarTitle","SideBar","sideBarOpen","sideBarClosed","toggleInner","Login","setUsername","login","name","form","note","buttons","onLogin","GEO_SKETCH_DEMO_CONFIG","domainUrl","GeoSketchDemoConfig","Convergence","configureLogging","root","LogLevel","WARN","ConnectionManager","demoId","stores","connectAnonymously","domain","activities","join","setActivity","models","openAutoCreate","collection","ephemeral","setModel","chat","membership","ignoreExistsError","roomId","setChatRoom","GeoSketch","urlUsername","connected","setConnected","loginError","setLoginError","connectionManager","connect","main","Boolean","hostname","match","URL","searchParams","url","append","history","pushState","getDemoId","init","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2718bdbb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1KXGp\",\"chatMessages\":\"styles_chatMessages__hXuqV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainMap\":\"styles_mainMap__3ErMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"latLonWidget\":\"styles_latLonWidget__1HF1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collabTextArea\":\"styles_collabTextArea__yHKrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"presenceList\":\"styles_presenceList__1bWZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatPanel\":\"styles_chatPanel__1ejlL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatInput\":\"styles_chatInput__gwuQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__2wVPV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collapsed\":\"styles_collapsed__ry_ET\",\"expanded\":\"styles_expanded__1pWwN\",\"expanderButton\":\"styles_expanderButton__3T0k7\",\"editorWidget\":\"styles_editorWidget__1I-Jg\",\"title\":\"styles_title__2P9ax\",\"label\":\"styles_label__1VVM8\",\"descriptionInput\":\"styles_descriptionInput__9_lsj\",\"titleInput\":\"styles_titleInput__ahQYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formattingWidget\":\"styles_formattingWidget__1VxJ2\",\"row\":\"styles_row__1XAXf\",\"button\":\"styles_button__2RT-y\",\"thickness\":\"styles_thickness__3TVEl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"styles_login__3lYxr\",\"title\":\"styles_title__3gnnm\",\"name\":\"styles_name__NQ72x\",\"label\":\"styles_label__EfNn2\",\"form\":\"styles_form__2TyNH\",\"buttons\":\"styles_buttons__3FLZg\",\"button\":\"styles_button__2rpTD\",\"note\":\"styles_note__2Kj7T\"};","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {loadModules, loadCss} from 'esri-loader';\n\nimport Basemap from \"esri/Basemap\";\nimport Color from \"esri/Color\";\nimport Map from \"esri/Map\";\nimport Graphic from \"esri/Graphic\";\n\nimport watchUtils from \"esri/core/watchUtils\";\n\nimport Extent from \"esri/geometry/Extent\";\nimport Geometry from \"esri/geometry/Geometry\";\nimport Point from \"esri/geometry/Point\";\nimport Polygon from \"esri/geometry/Polygon\";\nimport Polyline from \"esri/geometry/Polyline\";\n\nimport jsonUtils from \"esri/geometry/support/jsonUtils\";\n\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\";\nimport Symbol from  \"esri/symbols/Symbol\"\nimport SimpleFillSymbol from \"esri/symbols/SimpleFillSymbol\";\nimport SimpleLineSymbol from \"esri/symbols/SimpleLineSymbol\";\nimport SimpleMarkerSymbol from \"esri/symbols/SimpleMarkerSymbol\";\n\nimport MapView from \"esri/views/MapView\";\n\nimport BasemapGallery from \"esri/widgets/BasemapGallery\";\nimport Expand from \"esri/widgets/Expand\";\nimport Sketch from \"esri/widgets/Sketch\";\n\nconst modules = [\n  \"esri/Basemap\",\n  \"esri/Color\",\n  \"esri/Graphic\",\n  \"esri/Map\",\n\n  \"esri/core/watchUtils\",\n\n  \"esri/geometry/Extent\",\n  \"esri/geometry/Geometry\",\n  \"esri/geometry/Point\",\n  \"esri/geometry/Polygon\",\n  \"esri/geometry/Polyline\",\n\n  \"esri/geometry/support/jsonUtils\",\n\n  \"esri/layers/GraphicsLayer\",\n\n  \"esri/symbols/SimpleFillSymbol\",\n  \"esri/symbols/SimpleLineSymbol\",\n  \"esri/symbols/SimpleMarkerSymbol\",\n  \"esri/symbols/Symbol\",\n\n  \"esri/views/MapView\",\n\n  \"esri/widgets/Expand\",\n  \"esri/widgets/BasemapGallery\",\n  \"esri/widgets/Sketch\"\n];\n\nexport interface IEsri {\n  Basemap: typeof Basemap;\n  Color: typeof Color;\n  Map: typeof Map;\n  Graphic: typeof Graphic;\n  core: {\n    watchUtils: typeof watchUtils;\n  },\n  geometry: {\n    Extent: typeof Extent;\n    Geometry: typeof Geometry;\n    Point: typeof Point;\n    Polygon: typeof Polygon;\n    Polyline: typeof Polyline;\n    support: {\n      jsonUtils: jsonUtils;\n    }\n  }\n  layers: {\n    GraphicsLayer: typeof GraphicsLayer;\n  };\n  symbols: {\n    SimpleFillSymbol: typeof SimpleFillSymbol;\n    SimpleLineSymbol: typeof SimpleLineSymbol;\n    SimpleMarkerSymbol: typeof SimpleMarkerSymbol;\n    Symbol: typeof Symbol;\n  },\n  views: {\n    MapView: typeof MapView;\n  };\n  widgets: {\n    BasemapGallery: typeof BasemapGallery,\n    Expand: typeof Expand,\n    Sketch: typeof Sketch;\n  };\n}\n\nexport const esri: IEsri = {} as any as IEsri;\n\nexport class ArcGisLoader {\n  static async init(): Promise<void> {\n    loadCss();\n    const resolved = await (loadModules(modules) as Promise<any[]>);\n\n    modules.forEach((module: string, index: number) => {\n      const path = module.split(\"/\");\n      path.shift();\n\n      let currentTarget = esri as any;\n      for (let i = 0; i < path.length - 1; i++) {\n        const p = path[i];\n        if (currentTarget[p] === undefined) {\n          currentTarget[p] = {};\n        }\n\n        currentTarget = currentTarget[p];\n      }\n\n      currentTarget[path[path.length - 1]] = resolved[index];\n    });\n  }\n}\n\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {useEffect, useState} from 'react';\nimport Graphic from \"esri/Graphic\";\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\";\n\nexport interface IRemoteStateGraphicProps {\n  layer: GraphicsLayer;\n  item: any;\n  create: (item: any) => Graphic;\n  update: (item: any, graphic: Graphic) => void;\n}\n\nexport const RemoteStateGraphic = (props: IRemoteStateGraphicProps) => {\n  const [graphic, setGraphic] = useState<Graphic | null>(null);\n  const {item, layer, update, create} = props;\n\n  useEffect(() => {\n    const graphic = create(item);\n    layer.add(graphic);\n    setGraphic(graphic);\n\n    return () => {\n      layer.remove(graphic);\n    }\n    // eslint-disable-next-line\n  }, [layer]);\n\n  useEffect(() => {\n    if (graphic !== null) {\n     update(item, graphic);\n    }\n  }, [item, graphic, update]);\n\n  return null;\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {ColorAssigner} from '@convergence/color-assigner';\n\nimport Color from \"esri/Color\";\nimport {esri} from \"./ArcGisLoader\";\nimport {RGBColor} from \"react-color\";\n\nexport const colorAssigner = new ColorAssigner(ColorAssigner.Palettes.DARK_12);\n\n\nexport function reactColorToEsriColor(color: RGBColor): Color {\n  const {r, g, b, a} = color;\n  const colorArray = [r, g, b];\n  if (a !== undefined) {\n    colorArray.push(a);\n  }\n  return new esri.Color(colorArray);\n}\n\nexport function esriColorToReactColor(color: Color): RGBColor {\n  const {r, g, b, a} = color;\n  return {r, g, b, a};\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React from 'react';\nimport Graphic from \"esri/Graphic\";\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\";\nimport {esri} from \"../../../utils/ArcGisLoader\";\nimport {RemoteStateGraphic} from \"../RemoteStateGraphic\";\nimport {colorAssigner} from \"../../../utils/color-util\";\nimport {RemoteState} from \"../../../models/RemoteState\";\nimport {IPointerCoordinates} from \"../../../models/IPointerCoordinates\";\n\nexport interface IRemotePointerGraphicProps {\n  layer: GraphicsLayer;\n  pointer: RemoteState<IPointerCoordinates>;\n}\n\nexport const RemotePointerGraphic = (props: IRemotePointerGraphicProps) => {\n  const {pointer, layer} = props;\n  return <RemoteStateGraphic\n    layer={layer}\n    item={pointer}\n    create={createPointer}\n    update={(state: RemoteState<IPointerCoordinates>, graphic: Graphic) => {\n      graphic.geometry = new esri.geometry.Point(state.value);\n    }}\n  />;\n};\n\nfunction createPointer(pointer: RemoteState<IPointerCoordinates>): Graphic {\n  const geometry = new esri.geometry.Point(pointer.value);\n  const {r, g, b} = colorAssigner.getColor(pointer.user.userId.toGuid());\n  const color = [r, g, b, 0.7];\n  const symbol = new esri.symbols.SimpleMarkerSymbol({\n    style: \"path\",\n    outline: {style: \"none\"},\n    path: PointerPath,\n    xoffset: \"5px\",\n    yoffset: \"-7px\",\n    color\n  });\n  return new esri.Graphic({geometry, symbol});\n}\n\nconst PointerPath = 'm 75.300095,89.125 c -2.5188,0 -5.03,0 -7.55,0.025 -0.36,57.61001 -0.14488,115.23998 -0.22504,172.85 0.11024,30.56004 -0.21968,61.12498 0.2,91.675 10.37032,-0.01 20.74008,0.08 31.1,0 0.27744,-4.44488 0.348,-8.93234 0.35008,-13.425 l 0,-2.025 2.024965,0.025 c 4.40976,0.0289 8.81048,0.002 13.2,-0.05 0.10592,-4.5143 0.42376,-9.05769 -0.075,-13.575 l -0.27496,-2.525 2.52504,0.325 c 4.54232,0.57852 9.13448,0.197 13.67496,0.1 0.0866,-4.35032 0.1844,-8.70374 0.22504,-13.05 l 0.025,-2 2,0.025 c 3.43216,0.0267 6.87392,-0.0112 10.32496,-0.2 l 2.27504,-0.125 -0.17504,2.275 c -0.71368,9.51482 0.89384,19.03621 0.37504,28.55 4.48976,0.14849 8.97896,0.2084 13.47504,0.25 l 1.94992,0.025 0.025,1.95 c 0.0878,9.64042 0.0657,19.27631 0.22504,28.925 4.4364,0.087 8.87376,0.1386 13.32496,0.15 l 1.97504,0 0.025,1.975 c 0.0801,4.49655 0.11752,8.96595 0.1,13.475 10.43992,0.14 20.88512,0.11 31.32496,0.05 0.37624,-4.42817 0.5416,-8.91848 0.22504,-13.425 l -0.15,-2.2 2.2,0.05 c 4.42952,0.12337 8.8712,0.0862 13.25,-0.025 0.15,-10.38998 0.095,-20.78495 -0.025,-31.175 -4.46072,-0.12198 -8.91296,-0.1782 -13.37496,-0.225 l -1.95,-0.025 -0.025,-1.95 c -0.15104,-9.65978 -0.078,-19.28792 -0.12504,-28.95 -4.46824,-0.1639 -8.97896,-0.24806 -13.47496,-0.125 l -2.12504,0.05 0.075,-2.125 c 0.15224,-3.72234 0.2132,-7.43125 0.2,-11.125 l 0,-2 2,0 c 19.96048,-0.0353 39.9032,-0.0274 59.87504,-0.25 0.13008,-10.35002 0.16488,-20.69997 -0.025,-31.05 -4.49024,0 -8.97256,-0.0334 -13.45008,-0.1 l -1.94992,-0.025 -0.025,-1.95 c -0.065,-4.48808 -0.10104,-8.98374 -0.075,-13.475 -4.46624,-0.1132 -8.92296,-0.1394 -13.4,-0.15 l -1.97504,0 -0.025,-1.975 c -0.0491,-4.45188 -0.088,-8.89958 -0.17504,-13.35 -4.4552,-0.199 -8.93808,-0.3182 -13.45,-0.275 l -2.02504,0.025 0,-2.025 c -0.01,-4.50767 -0.031,-9.00584 -0.075,-13.5 -4.49248,0.0263 -8.99208,-0.009 -13.47496,-0.1 l -1.95008,-0.05 0,-1.95 c -0.0118,-4.41425 -0.0446,-8.8033 -0.17496,-13.2 -4.43424,-0.243 -8.87832,-0.2822 -13.35,-0.3 l -1.97504,0 -0.025,-1.975 c -0.0707,-4.49178 -0.1176,-8.96993 -0.1,-13.475 -4.49776,-0.0175 -8.98584,-0.0518 -13.47504,-0.125 l -1.9,-0.025 -0.075,-1.9 c -0.1608,-4.49031 -0.34096,-9.00011 -0.35,-13.5 -4.38576,-0.1042 -8.76824,-0.122 -13.17504,-0.125 l -1.94992,0 -0.0501,-1.95 c -0.1088,-4.4705 -0.1688,-8.96599 -0.12496,-13.45 -4.49192,-0.0524 -8.9856,-0.0844 -13.47504,-0.15 l -1.9,-0.025 -0.075,-1.9 c -0.17592,-4.48987 -0.24096,-8.98034 -0.25,-13.5 -4.46808,-0.1045 -8.92472,-0.1282 -13.4,-0.15 l -1.97504,0 -0.025,-1.975 c -0.0282,-4.4654 -0.0543,-8.94064 -0.15,-13.4 -4.48952,-0.0262 -9.0016,-0.0375 -13.5,-0.075 l -1.950005,-0.025 -0.02496,-1.95 c -0.04112,-4.47935 -0.066,-8.97978 -0.07504,-13.475 -4.49416,-0.1306 -9.02416,-0.1016 -13.55,-0.075 l -1.97496,0 -0.02504,-1.975 c -0.0284,-4.508216 -0.10856,-9.018512 -0.3,-13.5 -2.51496,-0.015 -5.03128,-0.025 -7.55,-0.025 z';\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React, {Fragment, ReactNode, useEffect, useState} from 'react';\nimport Map from \"esri/Map\";\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\";\nimport {esri} from \"../../../utils/ArcGisLoader\";\n\nexport interface IRemoteStateLayerProps<T> {\n  map: Map;\n  remoteItems: T[];\n  renderer: (item: T, layer: GraphicsLayer) => ReactNode;\n}\n\nexport const RemoteStateLayer = (props: IRemoteStateLayerProps<any>) => {\n  const [layer, setLayer] = useState<GraphicsLayer | null>(null);\n\n  useEffect(() => {\n    const l = new esri.layers.GraphicsLayer();\n    props.map.add(l, props.map.layers.length);\n    setLayer(l);\n\n    return () => {\n      props.map.remove(l);\n    };\n  }, [props.map]);\n\n  if (layer !== null) {\n    const rendered = props.remoteItems.map(i => props.renderer(i, layer));\n    return <Fragment>{rendered}</Fragment>;\n  } else {\n    return null;\n  }\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React from 'react';\nimport {RemotePointerGraphic} from \"../RemotePointerGraphic\";\nimport Map from \"esri/Map\";\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\";\nimport {RemoteStateLayer} from \"../RemoteStateLayer\";\nimport {RemoteState} from \"../../../models/RemoteState\";\nimport {IPointerCoordinates} from \"../../../models/IPointerCoordinates\";\n\nexport interface IRemotePointerLayerProps {\n  map: Map;\n  pointers: RemoteState<IPointerCoordinates | null>[]\n}\n\nexport const RemotePointerLayer = (props: IRemotePointerLayerProps) => {\n  return <RemoteStateLayer\n    map={props.map}\n    remoteItems={props.pointers}\n    renderer={(p: RemoteState<IPointerCoordinates>, layer: GraphicsLayer) => <RemotePointerGraphic key={p.sessionId}\n                                                                                layer={layer!}\n                                                                                pointer={p}/>\n    }\n  />;\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nexport interface CancelableRateLimitedFunction<T> {\n  callback: T;\n  cancel(): void;\n}\n\nexport function eventsPerSecondToMillisecondInterval(eventsPerSecond: number): number {\n  return 1000 / eventsPerSecond;\n}\n\nexport function rateLimit<T extends (...args: any[]) => any>(this: any,\n                                                             callback: T,\n                                                             minIntervalMs: number): T {\n  return rateLimitWithCancel(callback, minIntervalMs).callback;\n}\n\nexport function rateLimitWithCancel<T extends (...args: any[]) => any>(\n  this: any, callback: T, minIntervalMs: number): CancelableRateLimitedFunction<T> {\n\n  let lastEventTime: number = 0;\n  let finalEventTimerId: any = null;\n  const context: any = this;\n\n  const func = function () {\n    const args = arguments as any as any[];\n    const time = Date.now();\n    const delta = time - lastEventTime;\n\n    if (delta > minIntervalMs) {\n      lastEventTime = time;\n      callback.apply(context, args);\n    } else {\n      if (finalEventTimerId) {\n        clearTimeout(finalEventTimerId);\n        finalEventTimerId = null;\n      }\n      finalEventTimerId = setTimeout(function () {\n        callback.apply(context, args);\n      }, minIntervalMs - delta);\n    }\n  } as T;\n\n  return {\n    callback: func,\n    cancel: () => {\n      clearTimeout(finalEventTimerId);\n    }\n  }\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React, {useRef} from 'react';\nimport styles from \"./styles.module.css\";\nimport {IPointerCoordinates} from \"../../../models/IPointerCoordinates\";\n\nexport interface LatLongWidgetProps {\n  position: IPointerCoordinates | null;\n}\n\nexport const LatLongWidget = (props: LatLongWidgetProps) => {\n  const {position} = props;\n  const widgetRef = useRef<HTMLDivElement>(null);\n  const rendered = toString(position);\n  return <div className={styles.latLonWidget} ref={widgetRef}>{rendered}</div>;\n};\n\nfunction toString(position: IPointerCoordinates | null): string {\n  return position ? `${ddToDMS(position.y, true)}, ${ddToDMS(position.x, false)}` : \"\";\n}\n\nfunction ddToDMS(dd: number, lat: boolean): string {\n  const d = Number(dd);\n  const m = Number((dd - d) * 60);\n  const s = (dd - d - m/60) * 3600;\n\n  const direction = lat ? dd < 0 ? \"S\" : \"N\" : dd < 0 ? \"W\" : \"E\";\n\n  return `${Math.abs(Math.round(d))}° ${Math.round(m)}' ${Math.round(s)}\" ${direction}`\n}","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {DomainUser} from \"@convergence/convergence\";\n\nexport class RemoteState<T> {\n  constructor(public readonly user: DomainUser,\n              public readonly sessionId: string,\n              public readonly value: T) {\n    Object.freeze(this);\n  }\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {\n  Activity,\n  ActivityParticipant,\n  ActivitySessionJoinedEvent,\n  ActivitySessionLeftEvent,\n  ActivityStateRemovedEvent,\n  ActivityStateSetEvent\n} from \"@convergence/convergence\";\nimport {action, computed, observable} from \"mobx\";\nimport {RemoteState} from \"../models/RemoteState\";\n\nexport abstract class SharedStateStore<M = any> {\n\n  @observable\n  public remoteStateMap: Map<string, RemoteState<M>>;\n\n  @observable\n  public localState: M;\n\n  private _defaultLocalState: M;\n\n  private readonly _stateKey: string;\n  private _activity: Activity | null = null;\n\n  protected constructor(stateKey: string, defaultLocalState: M) {\n    this._stateKey = stateKey;\n    this.remoteStateMap = new Map();\n    this.localState = defaultLocalState;\n    this._defaultLocalState = defaultLocalState;\n  }\n\n  @action\n  public setActivity(activity: Activity): void {\n    this._activity = activity;\n\n    this._activity\n      .participants()\n      .filter(p => !p.local && p.state.has(this._stateKey))\n      .forEach(p => {\n        this.remoteStateMap.set(p.sessionId, this._createModel(p))\n      });\n\n    this._activity.events().subscribe(e => {\n      if (e instanceof ActivityStateSetEvent && e.key === this._stateKey) {\n        this._onUpdateState(e);\n      } else if (e instanceof ActivityStateRemovedEvent && e.key === this._stateKey) {\n        this._onRemoveState(e);\n      } else if (e instanceof ActivitySessionJoinedEvent) {\n        this._onUpdateState(e);\n      } else if (e instanceof ActivitySessionLeftEvent) {\n        this._onRemoveState(e);\n      }\n    });\n\n    if (this.localState) {\n      this.setLocalState(this.localState);\n    }\n  }\n\n  @computed\n  public get remoteState(): RemoteState<M>[] {\n    return Array.from(this.remoteStateMap.values());\n  }\n\n  @action\n  public setLocalState(value: M): void {\n    this.localState = value;\n\n    if (this._activity !== null) {\n      this._activity.setState({[this._stateKey]: value});\n    }\n  }\n\n  @action\n  public clearLocalState(): void {\n    this.localState = this._defaultLocalState;\n\n    if (this._activity !== null) {\n      this._activity.removeState(this._stateKey);\n    }\n  }\n\n  @action\n  public setRemoteState(sessionId: string, remoteState: RemoteState<M>): void {\n    this.remoteStateMap.set(sessionId, remoteState);\n  }\n\n  private _onUpdateState = (e: ActivityStateSetEvent | ActivitySessionJoinedEvent) => {\n    if (this._activity === null) {\n      return;\n    }\n\n    const participant = this._activity.participant(e.sessionId);\n    if (!participant.local && participant.state.has(this._stateKey)) {\n      const newRemoteState = this._createModel(participant);\n      this.setRemoteState(e.sessionId, newRemoteState);\n    }\n  };\n\n  private _onRemoveState = (e: ActivitySessionLeftEvent | ActivityStateRemovedEvent) => {\n    this.remoteStateMap.delete(e.sessionId);\n  };\n\n  private _createModel(participant: ActivityParticipant): RemoteState<M> {\n    const state = participant.state.get(this._stateKey);\n    return new RemoteState<M>(participant.user, participant.sessionId, state);\n  }\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {IPointerCoordinates} from \"../models/IPointerCoordinates\";\nimport {SharedStateStore} from \"./SharedStateStore\";\n\nexport class PointerStore extends SharedStateStore<IPointerCoordinates | null> {\n\n  constructor() {\n    super(\"pointer\", null);\n  }\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {DomainUser, RealTimeObject} from \"@convergence/convergence\";\n\nexport class RemoteSelection {\n  constructor(public readonly user: DomainUser,\n              public readonly sessionId: string,\n              public readonly objects: RealTimeObject[]) {\n    Object.freeze(this);\n  }\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {\n  ElementReference,\n  LocalElementReference,\n  RealTimeModel,\n  RealTimeObject,\n  ReferenceSetEvent,\n  ReferenceClearedEvent,\n  ReferenceDisposedEvent,\n  RemoteReferenceCreatedEvent\n} from \"@convergence/convergence\";\nimport {action, observable} from \"mobx\";\nimport {RemoteSelection} from \"../models/RemoteSelection\";\n\nexport class ModelStore {\n\n  private _selectionReference: LocalElementReference | null = null;\n\n  @observable\n  public model: RealTimeModel | null = null;\n\n  @observable\n  public remoteSelectionMap: Map<string, RemoteSelection> = new Map();\n\n  @observable\n  public remoteSelections: RemoteSelection[] = [];\n\n  @action\n  public setRemoteSelection(sessionId: string, remoteSelection: RemoteSelection) {\n    this.remoteSelectionMap.set(sessionId, remoteSelection);\n    this.remoteSelections.length = 0;\n    this.remoteSelections.push(...Array.from(this.remoteSelectionMap.values()));\n  }\n\n  @action\n  public removeRemoteSelection(sessionId: string) {\n    this.remoteSelectionMap.delete(sessionId);\n    this.remoteSelections.length = 0;\n    this.remoteSelections.push(...Array.from(this.remoteSelectionMap.values()));\n  }\n\n  @action\n  public setModel(model: RealTimeModel): void {\n    this.model = model;\n\n    this._selectionReference = this.model.elementReference(\"selection\");\n    this._selectionReference.set([]);\n    this._selectionReference.share();\n\n    this.model.events().subscribe(re => {\n      if (re instanceof RemoteReferenceCreatedEvent && re.reference.key() === \"selection\") {\n        this._handleNewReference(re.reference as ElementReference);\n      }\n    });\n\n    model.references({key: \"selection\"}).forEach(r => {\n      this._handleNewReference(r as ElementReference);\n    });\n  }\n\n  @action\n  public setLocalSelection(selection: RealTimeObject[]): void {\n    if (this._selectionReference) {\n      this._selectionReference?.set(selection);\n    }\n  }\n\n  private _setReference(ref: ElementReference) {\n    const selected = ref.values() as RealTimeObject[];\n    const remoteSelection = new RemoteSelection(ref.user(), ref.sessionId(), selected);\n    this.setRemoteSelection(ref.sessionId(), remoteSelection);\n  }\n\n  private _handleNewReference(ref: ElementReference): void {\n    if (ref.isLocal()) {\n      return;\n    }\n\n    const refSub = ref.events().subscribe(e => {\n      if (e instanceof ReferenceSetEvent && e.src instanceof ElementReference) {\n        this._setReference(ref as ElementReference);\n      } else if (e instanceof ReferenceClearedEvent) {\n        this.removeRemoteSelection(e.src.sessionId());\n      } else if (e instanceof ReferenceDisposedEvent) {\n        this.removeRemoteSelection(e.src.sessionId());\n        refSub.unsubscribe();\n      }\n    });\n\n    if (ref.isSet()) {\n      this._setReference(ref as ElementReference);\n    }\n  }\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {SharedStateStore} from \"./SharedStateStore\";\nimport {IViewportExtent} from \"../models/IViewportExtent\";\n\nexport class ViewportStore extends SharedStateStore<IViewportExtent | null> {\n\n  constructor() {\n    super(\"viewport\", null);\n  }\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {DomainUser} from \"@convergence/convergence\";\n\nexport class GeoSketchSessionUser {\n  constructor(public readonly user: DomainUser, public readonly sessionId: string, public local: boolean) {\n    Object.freeze(this);\n  }\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {\n  Activity,\n  ActivityParticipant,\n  ActivitySessionJoinedEvent,\n  ActivitySessionLeftEvent\n} from \"@convergence/convergence\";\nimport {action, observable} from \"mobx\";\nimport {GeoSketchSessionUser} from \"../models/GeoSketchSessionUser\";\nimport {ParticipantAction} from \"../models/ParticipantAction\";\n\nexport class ParticipantStore {\n  private _activity: Activity | null = null;\n\n  @observable\n  public participants: Map<string, GeoSketchSessionUser> = new Map();\n\n  @observable\n  public participantAction: ParticipantAction | null = null;\n\n  @action\n  public setActivity(activity: Activity): void {\n    this._activity = activity;\n\n    this._activity\n      .participants()\n      .forEach(p => this.participantJoined(p));\n\n    this._activity.events().subscribe(e => {\n      if (e instanceof ActivitySessionJoinedEvent) {\n        this.participantJoined(e.participant);\n      } else if (e instanceof ActivitySessionLeftEvent) {\n        this.participantLeft(e.sessionId);\n      }\n    });\n  }\n\n  @action\n  public setParticipantAction(action: ParticipantAction | null): void {\n    this.participantAction = action;\n  }\n\n  @action\n  public participantJoined(p: ActivityParticipant): void {\n    const participant = new GeoSketchSessionUser(p.user, p.sessionId, p.local);\n    this.participants.set(participant.sessionId, participant);\n  }\n\n  @action\n  public participantLeft(sessionId: string): void {\n    this.participants.delete(sessionId);\n    if (this.participantAction !== null && this.participantAction.participant.sessionId === sessionId) {\n      this.participantAction = null;\n    }\n  }\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {DomainUser} from \"@convergence/convergence\";\n\nexport class ChatMessage {\n  constructor(public user: DomainUser,\n              public eventId: number,\n              public timestamp: Date,\n              public message: string) {\n    Object.freeze(this);\n  }\n}","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {ChatHistoryEntry, ChatMessageEvent, ChatRoom, MessageChatHistoryEntry} from \"@convergence/convergence\";\nimport {action, observable} from \"mobx\";\nimport {ChatMessage} from \"../models/ChatMessage\";\n\nexport class ChatStore {\n  private _room: ChatRoom | null = null;\n\n  @observable\n  public messages: ChatMessage[] = [];\n\n  @action\n  public setChatRoom(room: ChatRoom): void {\n    this._room = room;\n\n    this._room\n      .getHistory({\n        limit: 25,\n        forward: false,\n        eventFilter: [\"message\"]\n      })\n      .then(result => {\n        result.data.forEach(e => this.prependHistoryEntry(e));\n      });\n\n    this._room.events().subscribe(e => {\n      if (e instanceof ChatMessageEvent) {\n        this.appendChatMessage(new ChatMessage(e.user, e.eventNumber, e.timestamp, e.message));\n      }\n    });\n  }\n\n  @action\n  public appendChatMessage(e: ChatMessage): void {\n    this.messages.push(e);\n  }\n\n  @action\n  public prependHistoryEntry(entry: ChatHistoryEntry): void {\n    if (entry instanceof MessageChatHistoryEntry) {\n      this.messages.unshift(new ChatMessage(entry.user, entry.eventNumber, entry.timestamp, entry.message));\n    }\n  }\n\n  @action\n  public sedMessage(message: string): void {\n    if (this._room) {\n      this._room.send(message).catch(e => console.error())\n    }\n  }\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {SharedStateStore} from \"./SharedStateStore\";\n\nexport class BasemapStore extends SharedStateStore<string> {\n\n  constructor(initialBasemap: string) {\n    super(\"basemap\", \"f81bc478e12c4f1691d0d7ab6361f5a6\");\n  }\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {\n  ArrayInsertEvent,\n  ArrayRemoveEvent,\n  ArraySetValueEvent,\n  IConvergenceEvent,\n  ModelChangedEvent,\n  NumberSetValueEvent,\n  RealTimeArray,\n  RealTimeNumber,\n  RealTimeObject, RealTimeString\n} from \"@convergence/convergence\";\nimport {esri} from \"./ArcGisLoader\";\nimport Graphic from \"esri/Graphic\";\nimport Geometry from \"esri/geometry/Geometry\";\nimport Point from \"esri/geometry/Point\";\nimport Polygon from \"esri/geometry/Polygon\";\nimport Polyline from \"esri/geometry/Polyline\";\nimport SimpleFillSymbol from \"esri/symbols/SimpleFillSymbol\";\nimport SimpleLineSymbol from \"esri/symbols/SimpleLineSymbol\";\nimport Symbol from \"esri/symbols/Symbol\";\nimport {RGBColor} from \"react-color\";\n\nexport interface GraphicAdapterOptions {\n  graphic: any;\n  id: string;\n  realTimeObject: RealTimeObject;\n  onTransform: (graphic: any) => void;\n  onVertexChange: (graphic: any) => void;\n  onRemove: (graphic: any) => void;\n}\n\nconst GEOMETRY = \"geometry\";\nconst SYMBOL = \"symbol\";\n\nexport class GraphicAdapter {\n  public static bind(options: GraphicAdapterOptions): void {\n    options.graphic.__convergenceAdapter = new GraphicAdapter(options);\n    (options.realTimeObject as any).__convergenceAdapter = options.graphic.__convergenceAdapter;\n  }\n\n  public static getAdapter(graphic: Graphic): GraphicAdapter {\n    return (graphic as any).__convergenceAdapter;\n  }\n\n  public static getAdapterFromRealTimeObject(rto: RealTimeObject): GraphicAdapter {\n    return (rto as any).__convergenceAdapter;\n  }\n\n  private readonly _onTransform: (graphic: any) => void;\n  private readonly _onVertexChange: (graphic: any) => void;\n\n  private readonly _graphic: Graphic;\n  private readonly _rtGraphic: RealTimeObject;\n\n  private _rtGeometry: RealTimeObject;\n\n  private readonly _lineSymbol: SimpleLineSymbol;\n  private readonly _rtLineSymbol: RealTimeObject;\n\n  private readonly _fillSymbol: SimpleFillSymbol | null;\n  private readonly _rtFillSymbol: RealTimeObject | undefined;\n\n  private readonly _rtTitle: RealTimeString;\n  private readonly _rtDescription: RealTimeString;\n\n  private readonly _segmentKey: \"paths\" | \"rings\" | null;\n\n  private readonly _id: string;\n\n  constructor(options: GraphicAdapterOptions) {\n    this._id = options.id;\n    this._graphic = options.graphic;\n    this._rtGraphic = options.realTimeObject;\n\n    this._onTransform = options.onTransform;\n    this._onVertexChange = options.onVertexChange;\n\n    if ((this._graphic.symbol as any).outline) {\n      this._fillSymbol = this._graphic.symbol as SimpleFillSymbol;\n      this._rtFillSymbol = this._rtGraphic.get(SYMBOL) as RealTimeObject;\n      this._bindSymbol(this._fillSymbol, this._rtFillSymbol);\n\n      this._lineSymbol = this._fillSymbol.outline ;\n      this._rtLineSymbol = this._rtGraphic.elementAt([SYMBOL, \"outline\"]) as RealTimeObject;\n      this._bindSymbol(this._lineSymbol, this._rtLineSymbol);\n    } else {\n      this._fillSymbol = null;\n      this._lineSymbol = this._graphic.symbol as SimpleLineSymbol;\n      this._rtLineSymbol = this._rtGraphic.get(SYMBOL) as RealTimeObject;\n      this._bindSymbol(this._lineSymbol, this._rtLineSymbol);\n    }\n\n    this._rtGraphic.on(RealTimeObject.Events.DETACHED, () => {\n      options.onRemove(this._graphic);\n    });\n\n    this._rtGeometry = this._rtGraphic.get(GEOMETRY) as RealTimeObject;\n    if (this._rtGeometry.hasKey(\"rings\")) {\n      this._segmentKey = \"rings\";\n      this._bindToPoly(\"rings\");\n    } else if (this._rtGeometry.hasKey(\"paths\")) {\n      this._segmentKey = \"paths\";\n      this._bindToPoly(\"paths\");\n    } else if (this._rtGeometry.hasKey(\"x\")) {\n      this._segmentKey  = null;\n      this._bindToPoint();\n    } else {\n      throw Error();\n    }\n\n    this._rtDescription = this._rtGraphic.elementAt([\"attributes\", \"description\"]) as RealTimeString;\n    this._rtTitle = this._rtGraphic.elementAt([\"attributes\", \"title\"]) as RealTimeString;\n  }\n\n  public id(): string {\n    return this._id;\n  }\n\n  public getRealTimeObject(): RealTimeObject {\n    return this._rtGraphic;\n  }\n\n  public getDescriptionAttribute(): RealTimeString {\n    return this._rtDescription;\n  }\n\n  public getTitleAttribute(): RealTimeString {\n    return this._rtTitle;\n  }\n\n  public getGraphic(): any {\n    return this._graphic;\n  }\n\n  public getSymbol(): Symbol {\n    return this._fillSymbol || this._lineSymbol;\n  }\n\n  private _bindToPoint(): void {\n    const x = this._rtGeometry.get(\"x\") as RealTimeNumber;\n    x.on(RealTimeNumber.Events.VALUE, () => {\n      const geometry = this._graphic.geometry as Point;\n      geometry.x = x.value();\n    });\n\n    const y = this._rtGeometry.get(\"y\") as RealTimeNumber;\n    y.on(RealTimeNumber.Events.VALUE, () => {\n      const geometry = this._graphic.geometry as Point;\n      geometry.y = y.value();\n    });\n  }\n\n  private _bindToPoly(key: string): void {\n    const segments = this._rtGeometry.get(key) as RealTimeArray;\n    segments.on(RealTimeObject.Events.VALUE, () => {\n      this._onTransform && this._onTransform(this._graphic);\n      const newSegments = segments.toJSON();\n\n      const curGeom = this._graphic.geometry.toJSON();\n      curGeom[this._segmentKey as string] = newSegments;\n      this._graphic.geometry = esri.geometry.support.jsonUtils.fromJSON(curGeom);\n    });\n\n    segments.on(RealTimeObject.Events.MODEL_CHANGED, (e: IConvergenceEvent) => {\n      const modelChangedEvent = e as ModelChangedEvent;\n      const event = modelChangedEvent.childEvent;\n      if (modelChangedEvent.relativePath.length === 2 && event instanceof ArraySetValueEvent) {\n        // vertex move\n        const geometry = this._graphic.geometry as Polygon;\n        const [segment, point] = modelChangedEvent.relativePath;\n        const newVal = event.element.value();\n        const newPoint = new esri.geometry.Point({x: newVal[0], y: newVal[1]});\n        geometry.setPoint(segment as number, point as number, newPoint);\n        this._graphic.geometry = esri.geometry.support.jsonUtils.fromJSON(geometry.toJSON());\n      } else if (modelChangedEvent.relativePath.length === 1 && event instanceof ArrayInsertEvent) {\n        // vertex added\n        const geometry = this._graphic.geometry as Polygon;\n        const segment = modelChangedEvent.relativePath[0];\n        const newVal = event.value.value();\n        const newPoint = new esri.geometry.Point({x: newVal[0], y: newVal[1]});\n        geometry.insertPoint(segment as number, event.index, newPoint);\n        this._graphic.geometry = esri.geometry.support.jsonUtils.fromJSON(geometry.toJSON());\n      } else if (modelChangedEvent.relativePath.length === 1 && event instanceof ArrayRemoveEvent) {\n        // vertex removed\n        const geometry = this._graphic.geometry as Polygon;\n        const segment = modelChangedEvent.relativePath[0];\n        geometry.removePoint(segment as number, event.index);\n        this._graphic.geometry = esri.geometry.support.jsonUtils.fromJSON(geometry.toJSON());\n      }\n\n      if (this._onVertexChange !== undefined) {\n        this._onVertexChange(this._graphic);\n      }\n    });\n  }\n\n  public setFillColor(color: RGBColor): void {\n    if (!this._fillSymbol || !this._rtFillSymbol) {\n      throw new Error(\"This graphic does not have a fill symbol\");\n    }\n    const rta = this._rtFillSymbol.get(\"color\") as RealTimeArray;\n    this._setColor(this._fillSymbol, rta, color);\n  }\n\n  public setLineColor(color: RGBColor): void {\n    const rta = this._rtLineSymbol.get(\"color\") as RealTimeArray;\n    this._setColor(this._lineSymbol, rta, color);\n  }\n\n  public setLineThickness(thickness: number): void {\n    this._lineSymbol.width = thickness;\n    this._rtLineSymbol.get(\"width\").value(thickness);\n  }\n\n  public addVertices(vertices: {segmentIndex: number, pointIndex: number, point: {x: number, y: number}}[]): void {\n    this._rtGeometry.model().startBatch();\n    vertices.forEach(vertex => {\n      const segment = this._rtGraphic.elementAt([GEOMETRY, this._segmentKey as string, vertex.segmentIndex]) as RealTimeArray;\n      segment.insert(vertex.pointIndex, [vertex.point.x, vertex.point.y]);\n    });\n    this._rtGeometry.model().completeBatch();\n  }\n\n  public deleteVertices(vertices: {segmentIndex: number, pointIndex: number}[]): void {\n    this._rtGeometry.model().startBatch();\n    vertices.forEach(v => {\n      const segment = this._rtGraphic.elementAt([GEOMETRY, this._segmentKey as string, v.segmentIndex]) as RealTimeArray;\n      segment.remove(v.pointIndex);\n    });\n    this._rtGeometry.model().completeBatch();\n  }\n\n  private _getSegments(): number[][][] {\n    if (this._graphic.geometry.type === \"polygon\") {\n      return (this._graphic.geometry as Polygon).rings;\n    } else {\n      return (this._graphic.geometry as Polyline).paths;\n    }\n  }\n  public updateVertex(segmentIndex: number, pointIndex: number, point: {x: number, y: number}): void {\n    const segmentKey = this._segmentKey as string;\n    const geometry = this._graphic.geometry as Polygon;\n    point = point || geometry.getPoint(segmentIndex, pointIndex);\n    const updatedPoint = this._rtGraphic.elementAt([GEOMETRY, segmentKey, segmentIndex, pointIndex]) as RealTimeObject;\n    const segment = this._getSegments()[segmentIndex];\n\n    if (this._graphic.geometry.type === \"polygon\" && pointIndex === segment.length - 1) {\n      // The last point what updated in a polygon. We need to update the first point.\n      this._rtGeometry.model().startBatch();\n\n      updatedPoint.value([point.x, point.y]);\n      geometry.setPoint(segmentIndex, segment.length - 1, new esri.geometry.Point(point));\n\n      const firstPoint = this._rtGraphic.elementAt([GEOMETRY, segmentKey, segmentIndex, 0]) as RealTimeObject;\n      firstPoint.value([point.x, point.y]);\n      geometry.setPoint(segmentIndex, 0, new esri.geometry.Point(point));\n\n      this._rtGeometry.model().completeBatch();\n    } else if (this._graphic.geometry.type === \"polygon\" && pointIndex === 0) {\n      // The first point what updated in a polygon. We need to update the last point.\n      this._rtGeometry.model().startBatch();\n\n      updatedPoint.value([point.x, point.y]);\n      geometry.setPoint(segmentIndex, 0, new esri.geometry.Point(point));\n\n      const lastPoint = this._rtGraphic.elementAt([GEOMETRY, segmentKey, segmentIndex, segment.length - 1]) as RealTimeObject;\n      lastPoint.value([point.x, point.y]);\n      geometry.setPoint(segmentIndex, segment.length - 1, new esri.geometry.Point(point));\n\n      this._rtGeometry.model().completeBatch();\n    } else {\n      updatedPoint.value([point.x, point.y]);\n      geometry.setPoint(segmentIndex, pointIndex, new esri.geometry.Point(point));\n    }\n  }\n\n  public setGeometry(geometry: Geometry): void {\n    const g = this._rtGraphic.get(GEOMETRY) as RealTimeObject;\n    switch (geometry.type) {\n      case \"point\":\n        this._rtGraphic.model().startBatch();\n        const point = geometry as Point;\n        g.get(\"x\").value(point.x);\n        g.get(\"y\").value(point.y);\n        this._rtGraphic.model().completeBatch();\n        break;\n      case \"polygon\":\n        const rings = g.get(\"rings\") as RealTimeArray;\n        rings.value(geometry.toJSON().rings);\n        break;\n      case \"polyline\":\n        const paths = g.get(\"paths\") as RealTimeArray;\n        paths.value(geometry.toJSON().paths);\n        break;\n      case  \"multipoint\":\n      case \"extent\":\n        throw new Error(\"unsupported geometry type: \" + geometry.type);\n    }\n  }\n\n  remove(): void {\n    this._rtGraphic.removeFromParent();\n  }\n\n  private _bindSymbol(symbol: Symbol, rtSymbol: RealTimeObject): void {\n    rtSymbol.get(\"color\").on(RealTimeObject.Events.VALUE, (evt: IConvergenceEvent) => {\n      const e = evt as ArraySetValueEvent;\n      symbol.color = this._toEsriColor(e.element as RealTimeArray);\n\n      // Hack to get the symbol to refresh\n      const original = this._graphic.symbol;\n      this._graphic.symbol = esri.symbols.Symbol.fromJSON({});\n      this._graphic.symbol = original;\n    });\n\n    if (rtSymbol.hasKey(\"width\")) {\n      rtSymbol.get(\"width\").on(RealTimeNumber.Events.VALUE, (evt: IConvergenceEvent) => {\n        const e = evt as NumberSetValueEvent;\n        (symbol as SimpleLineSymbol).width = e.element.value();\n\n        // Hack to get the symbol to refresh\n        const original = this._graphic.symbol;\n        this._graphic.symbol = esri.symbols.Symbol.fromJSON({});\n        this._graphic.symbol = original;\n      });\n    }\n  }\n\n  private _setColor(symbol: Symbol, rta: RealTimeArray, color: RGBColor): void {\n    const c = [color.r, color.g, color.b, (color.a === undefined ? 1 : color.a) * 255];\n    symbol.color = new esri.Color(c);\n    rta.value(c);\n  }\n\n  private _toEsriColor(rtColor: RealTimeArray): any {\n    const c = rtColor.value();\n    return new esri.Color(c);\n  }\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {action, observable} from \"mobx\";\nimport Graphic from \"esri/Graphic\";\nimport {RGBColor} from \"react-color\";\nimport {GraphicAdapter} from \"../utils/GraphicAdapter\";\nimport {RealTimeObject} from \"@convergence/convergence\";\n\nexport class FormattingStore {\n\n  @observable\n  public lineThickness: number = 1;\n\n  @observable\n  public fillColor: RGBColor = {r: 0, g: 0, b: 0, a: .25 };\n\n  @observable\n  public lineColor: RGBColor = {r: 0, g: 0, b: 0, a: 1 };\n\n  @observable\n  public graphics: Graphic[] = [];\n\n  @action\n  public setSelectedGraphics(graphics: Graphic[]) {\n    this.graphics = graphics;\n    if (graphics.length === 1) {\n      const graphic = graphics[0];\n\n      // The Esri sketch widget actually changes the color of the selected graphic\n      // so we can't get it from the graphic. We need to get it from the convergence\n      // representation.\n      const symbol = GraphicAdapter.getAdapter(graphic).getRealTimeObject().get(\"symbol\") as RealTimeObject;\n      const [r, g, b, a] = symbol.get(\"color\").value() as number[];\n\n      this.fillColor = {r, g, b, a: a / 255};\n\n      if (symbol.hasKey(\"outline\")) {\n        const outline = symbol.get(\"outline\") as RealTimeObject;\n        this.lineThickness = outline.get(\"width\").value() as number;\n        const [r, g, b, a] = outline.get(\"color\").value() as number[];\n        this.lineColor = {r, g, b, a: a / 255};\n      }\n    }\n  }\n\n  @action\n  public setLineThickness(lineThickness: number) {\n    this.lineThickness = lineThickness;\n  }\n\n  @action\n  public setLineColor(lineColor: RGBColor) {\n    this.lineColor = lineColor;\n  }\n\n  @action\n  public setFillColor(fillColor: RGBColor) {\n    this.fillColor = fillColor;\n  }\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {SharedStateStore} from \"./SharedStateStore\";\n\nexport class SketchStore extends SharedStateStore<any> {\n\n  constructor() {\n    super(\"sketch\", null);\n  }\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React, {Context} from \"react\";\nimport {PointerStore} from \"./PointerStore\";\nimport {ModelStore} from \"./ModelStore\";\nimport {ViewportStore} from \"./ViewportStore\";\nimport {ParticipantStore} from \"./ParticipantStore\";\nimport {ChatStore} from \"./ChatStore\";\nimport {BasemapStore} from \"./BasemapStore\";\nimport {FormattingStore} from \"./FormattingStore\";\nimport {SketchStore} from \"./SketchStore\";\n\nexport const pointerStore = new PointerStore();\nexport const viewportStore = new ViewportStore();\nexport const basemapStore = new BasemapStore(\"f81bc478e12c4f1691d0d7ab6361f5a6\");\nexport const modelStore = new ModelStore();\nexport const participantStore = new ParticipantStore();\nexport const chatStore = new ChatStore();\nexport const formattingStore = new FormattingStore();\nexport const sketchStore = new SketchStore();\n\nexport interface IStores {\n  viewportStore: ViewportStore;\n  pointerStore: PointerStore;\n  sketchStore: SketchStore;\n  basemapStore: BasemapStore;\n  modelStore: ModelStore;\n  participantStore: ParticipantStore;\n  chatStore: ChatStore;\n  formattingStore: FormattingStore;\n}\n\nexport const storesContext: Context<IStores> = React.createContext({\n  viewportStore,\n  pointerStore,\n  sketchStore,\n  basemapStore,\n  modelStore,\n  participantStore,\n  chatStore,\n  formattingStore\n});\n\nexport const useStores = () => React.useContext(storesContext);","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nexport function createUUID() {\n  let dt = new Date().getTime();\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (dt + Math.random() * 16) % 16 | 0;\n    dt = Math.floor(dt / 16);\n    // eslint-disable-next-line\n    return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n  });\n}","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {useEffect} from 'react';\nimport MapView from \"esri/views/MapView\";\nimport {esri} from \"../../../utils/ArcGisLoader\";\nimport {useStores} from \"../../../stores/stores\";\nimport {IConvergenceEvent, ObjectSetEvent, RealTimeElement, RealTimeObject} from \"@convergence/convergence\";\nimport {GraphicAdapter} from \"../../../utils/GraphicAdapter\";\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\";\nimport Graphic from \"esri/Graphic\"\nimport Sketch from \"esri/widgets/Sketch\";\nimport {createUUID} from \"../../../utils/uuid\";\nimport {reactColorToEsriColor} from \"../../../utils/color-util\";\nimport {rateLimit} from \"../../../utils/rateLimit\";\n\nexport interface ISketchWidgetProps {\n  view: MapView;\n}\n\nexport const SketchWidget = (props: ISketchWidgetProps) => {\n  const {modelStore, formattingStore, sketchStore} = useStores();\n  const {view} = props;\n  const {model} = modelStore;\n\n  useEffect(() => {\n    let layer: GraphicsLayer;\n    let sketch: Sketch;\n    if (model !== null && view) {\n      layer = new esri.layers.GraphicsLayer();\n      view.map.add(layer);\n\n      sketch = new esri.widgets.Sketch({\n        layer: layer,\n        view: view,\n        creationMode: \"update\"\n      });\n\n      view.ui.add(sketch, \"top-right\");\n\n      const bindGraphic = (layer: GraphicsLayer, graphic: Graphic, id: string, rte: RealTimeObject) => {\n        GraphicAdapter.bind({\n          graphic,\n          realTimeObject: rte,\n          id,\n          onTransform: (g) => {\n            if (sketch.updateGraphics.includes(g) &&  (sketch.viewModel as any).activeComponent) {\n              (sketch.viewModel as any).activeComponent.refresh();\n            }\n          },\n          onVertexChange: (g) => {\n            if (sketch.updateGraphics.includes(g) &&  (sketch.viewModel as any).activeComponent) {\n              (sketch.viewModel as any).activeComponent.refresh();\n            }\n          },\n          onRemove: (g) => {\n            layer.remove(g);\n            if (sketch.updateGraphics.includes(g)) {\n              sketch.updateGraphics.remove(g);\n              if (sketch.updateGraphics.length > 0  &&  (sketch.viewModel as any).activeComponent) {\n                const activeComponent = (sketch.viewModel as any).activeComponent;\n                activeComponent.graphics = (activeComponent.graphics as any[]).filter(a => a !== g);\n                activeComponent.refresh();\n              } else {\n                sketch.cancel();\n              }\n            }\n          }\n        });\n      };\n\n      const addFeature = (feature: RealTimeObject, id: string, layer: GraphicsLayer) => {\n        const graphic = esri.Graphic.fromJSON(feature.toJSON());\n        bindGraphic(layer, graphic, id, feature);\n        layer.add(graphic);\n      };\n\n      const sendSketch = rateLimit((sketchGeom) => {\n        sketchStore.setLocalState(sketchGeom);\n      }, 50);\n\n      const features = model.elementAt(\"features\") as RealTimeObject;\n\n      features.forEach((f: RealTimeElement, id?: string) => {\n        addFeature(f as RealTimeObject, id!, layer);\n      });\n\n      features.on(RealTimeObject.Events.SET, (e: IConvergenceEvent) => {\n        const event = e as ObjectSetEvent;\n        const rto = event.value as RealTimeObject;\n        const p = rto.path();\n        const id = p[p.length - 1] as string;\n        addFeature(rto, id, layer);\n      });\n\n      sketch.on(\"create\", e => {\n        if (e.state === \"complete\" || e.state === \"cancel\") {\n          sketchStore.clearLocalState();\n        }\n\n        if (e.state === \"complete\") {\n          const graphic = e.graphic;\n\n          graphic.symbol.color = reactColorToEsriColor(formattingStore.fillColor);\n\n          if ((graphic.symbol as any).outline !== undefined) {\n            const outline = (graphic.symbol as any).outline;\n            outline.color = reactColorToEsriColor(formattingStore.lineColor);\n            outline.width = formattingStore.lineThickness;\n          }\n\n          const json = graphic.toJSON();\n          delete json[\"popupTemplate\"];\n          json.attributes = {\n            title: \"\",\n            description: \"\"\n          };\n          const id = createUUID();\n          const rte = features.set(id, json);\n\n          bindGraphic(layer, graphic, id, rte as RealTimeObject);\n        } else if (e.state === \"active\") {\n          const sketchGeom = e.graphic.geometry.toJSON();\n          sendSketch(sketchGeom);\n        }\n      });\n\n      sketch.on(\"delete\", e => {\n        e.graphics.forEach(graphic => {\n          GraphicAdapter.getAdapter(graphic).remove();\n        });\n      });\n\n      sketch.on(\"undo\", e => {\n        if (e.tool === \"move\" || e.tool === \"reshape\" || e.tool === \"transform\") {\n          e.graphics.forEach(g => {\n            GraphicAdapter.getAdapter(g).setGeometry(g.geometry);\n          });\n        }\n      });\n\n      sketch.on(\"redo\", e => {\n        if (e.tool === \"move\" || e.tool === \"reshape\" || e.tool === \"transform\") {\n          e.graphics.forEach(g => {\n            GraphicAdapter.getAdapter(g).setGeometry(g.geometry);\n          });\n        }\n      });\n\n      sketch.on(\"update\", e => {\n        if (e.state === \"active\") {\n          switch (e.toolEventInfo.type) {\n            case \"move\":\n            case \"rotate\":\n            case \"scale\":\n              e.graphics.forEach(g => {\n                GraphicAdapter.getAdapter(g).setGeometry(g.geometry);\n              });\n              break;\n            case \"reshape\": {\n              // Note you can only reshape one graphic at a time.\n              const mover = (e.toolEventInfo as any).mover;\n              const pathIndex = mover.attributes.pathIndex;\n              const pointIndex = mover.attributes.pointIndex;\n              const graphic = e.graphics[0];\n              const g = graphic.geometry as any;\n              const comp = (g.rings || g.paths) as number[][][];\n              const point = comp[pathIndex][pointIndex];\n              GraphicAdapter.getAdapter(graphic).updateVertex(pathIndex, pointIndex, {\n                x: point[0],\n                y: point[1]\n              });\n              break;\n            }\n            case \"vertex-add\": {\n              // Note you can only add vertices to one graphic at a time.\n              const vertices = e.toolEventInfo.vertices.map(vertex => {\n                const coords = vertex.coordinates as any as number[];\n                return {\n                  segmentIndex: vertex.componentIndex,\n                  pointIndex: vertex.vertexIndex,\n                  point: {x: coords[0], y: coords[1]}}\n              });\n\n              GraphicAdapter.getAdapter(e.graphics[0]).addVertices(vertices);\n              break;\n            }\n            case \"vertex-remove\": {\n              // Note you can only remove vertices to one graphic at a time.\n              const vertices = e.toolEventInfo.vertices.map(vertex => {\n                return {segmentIndex: vertex.componentIndex, pointIndex: vertex.vertexIndex}\n              });\n              GraphicAdapter.getAdapter(e.graphics[0]).deleteVertices(vertices);\n            }\n          }\n        }\n      });\n\n      sketch.updateGraphics.on(\"change\", () => {\n        const graphics = sketch.updateGraphics.toArray();\n        formattingStore.setSelectedGraphics(graphics);\n        const objects = graphics.map(g => GraphicAdapter.getAdapter(g).getRealTimeObject());\n        modelStore.setLocalSelection(objects);\n      });\n    }\n\n    return () => {\n      if (view.map && layer) {\n        view.map.remove(layer);\n      }\n      if (view.ui && sketch) {\n        view.ui.remove(sketch);\n      }\n    }\n    // eslint-disable-next-line\n  }, [view]);\n\n  return null;\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {GeoSketchSessionUser} from \"./GeoSketchSessionUser\";\n\nexport enum ParticipantActionType {\n  PREVIEW,\n  GOTO,\n  LINK\n}\n\nexport class ParticipantAction {\n  public static preview(participant: GeoSketchSessionUser): ParticipantAction {\n    return new ParticipantAction(ParticipantActionType.PREVIEW, participant);\n  }\n\n  public static goto(participant: GeoSketchSessionUser): ParticipantAction {\n    return new ParticipantAction(ParticipantActionType.GOTO, participant);\n  }\n\n  public static link(participant: GeoSketchSessionUser): ParticipantAction {\n    return new ParticipantAction(ParticipantActionType.LINK, participant);\n  }\n\n  constructor(public actionType: ParticipantActionType,\n                        public participant: GeoSketchSessionUser) {\n    Object.freeze(this);\n  }\n}","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {useEffect} from 'react';\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\";\nimport Graphic from \"esri/Graphic\";\nimport {esri} from \"../../../utils/ArcGisLoader\";\nimport Polygon from \"esri/geometry/Polygon\";\nimport MapView from \"esri/views/MapView\";\nimport Geometry from \"esri/geometry/Geometry\";\n\nexport interface IRemoteSelectedGraphicProps {\n  mapView: MapView;\n  layer: GraphicsLayer;\n  graphic: Graphic;\n  color: { r: number, g: number, b: number };\n}\n\nfunction translatePoint(view: MapView, p: Polygon, point: number, dx: number, dy: number): void {\n  const currentPoint = p.getPoint(0, point);\n  const sp  = view.toScreen(currentPoint);\n  const newPoint = view.toMap({x: sp.x + dx, y: sp.y + dy});\n  p.setPoint(0, point, newPoint);\n}\n\nfunction createOutline(graphic: Graphic, delta: number, mapView: MapView): Geometry {\n  const geometry = esri.geometry.Polygon.fromExtent(graphic.geometry.extent);\n\n  translatePoint(mapView, geometry, 0, -delta, delta);\n  translatePoint(mapView, geometry, 1, -delta, -delta);\n  translatePoint(mapView, geometry, 2, delta, -delta);\n  translatePoint(mapView, geometry, 3, delta, delta);\n  translatePoint(mapView, geometry, 4, -delta, delta);\n\n  return geometry;\n}\n\nexport const RemoteSelectedGraphic = (props: IRemoteSelectedGraphicProps) => {\n  const {layer, graphic, color, mapView} = props;\n\n  useEffect(() => {\n    let selectionGraphic: Graphic | null = null;\n    let geometryHandle: any;\n    let zoomHandle: any;\n\n    if (graphic.geometry.extent !== null) {\n      const geometry = createOutline(graphic, 5, mapView);\n\n      const symbol = {\n        type: \"simple-fill\",\n        color: [color.r, color.g, color.b, 0.1],\n        outline: {\n          type: \"simple-line\",\n          color: [color.r, color.g, color.b],\n          width: 1,\n          style: \"short-dot\"\n        }\n      };\n\n      selectionGraphic = new esri.Graphic({geometry, symbol});\n      layer.add(selectionGraphic);\n\n      geometryHandle = esri.core.watchUtils.watch(graphic, \"geometry\", () => {\n        if (selectionGraphic) {\n          selectionGraphic.geometry = createOutline(graphic, 5, mapView);\n        }\n      });\n\n      zoomHandle = esri.core.watchUtils.watch(props.mapView, \"zoom\", () => {\n        if (selectionGraphic) {\n          selectionGraphic.geometry = createOutline(graphic, 5, mapView);\n        }\n      });\n    }\n\n    return () => {\n      if (selectionGraphic) {\n        layer.remove(selectionGraphic);\n      }\n      if (geometryHandle) {\n        geometryHandle.remove();\n      }\n\n      if (zoomHandle) {\n        zoomHandle.remove();\n      }\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return null;\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React from 'react';\nimport {RemoteSelection} from \"../../../models/RemoteSelection\";\nimport {RemoteSelectedGraphic} from \"../RemoteSelectedGraphic\";\nimport {GraphicAdapter} from \"../../../utils/GraphicAdapter\";\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\";\nimport {colorAssigner} from \"../../../utils/color-util\";\nimport MapView from \"esri/views/MapView\";\n\nexport interface IRemoteSelectedGraphicsProps {\n  remoteSelection: RemoteSelection;\n  layer: GraphicsLayer;\n  mapView: MapView;\n}\n\nexport const RemoteSelectedGraphics = (props: IRemoteSelectedGraphicsProps) => {\n  const graphics = props.remoteSelection.objects.map(rto => {\n    const adapter = GraphicAdapter.getAdapterFromRealTimeObject(rto);\n    const color = colorAssigner.getColor(props.remoteSelection.user.userId.toGuid());\n    return <RemoteSelectedGraphic key={adapter.id()}\n                                  color={color}\n                                  graphic={adapter.getGraphic()}\n                                  layer={props.layer}\n                                  mapView={props.mapView}\n    />;\n  });\n  return <React.Fragment>{graphics}</React.Fragment>;\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React, {Fragment, useEffect, useState} from 'react';\nimport MapView from \"esri/views/MapView\";\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\";\nimport {esri} from \"../../../utils/ArcGisLoader\";\nimport {useStores} from \"../../../stores/stores\";\nimport {RemoteSelectedGraphics} from \"../RemoteSelectedGraphics\";\nimport {observer} from \"mobx-react\";\n\nexport interface IRemoteSelectionLayerProps<T> {\n  mapView: MapView;\n}\n\nexport const RemoteSelectionLayer = observer((props: IRemoteSelectionLayerProps<any>) => {\n  const [selectionLayer, setSelectionLayer] = useState<GraphicsLayer | null>(null);\n  const {modelStore} = useStores();\n  const map = props.mapView.map;\n\n  useEffect(() => {\n    const layer = new esri.layers.GraphicsLayer();\n    map.add(layer, map.layers.length);\n    setSelectionLayer(layer);\n\n    return () => {\n      map.remove(layer);\n    };\n  }, [map]);\n\n  if (selectionLayer !== null) {\n    const selections = modelStore.remoteSelections.map(rs => {\n      return <RemoteSelectedGraphics key={rs.sessionId} remoteSelection={rs} layer={selectionLayer} mapView={props.mapView}/>\n    });\n    return <Fragment>{selections}</Fragment>;\n  } else {\n    return null;\n  }\n});\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {useEffect} from 'react';\nimport {esri} from \"../../../utils/ArcGisLoader\";\nimport MapView from \"esri/views/MapView\";\n\n\nexport interface IBasemapWidgetProps {\n  view: MapView;\n}\n\nexport const BasemapWidget = (props: IBasemapWidgetProps) => {\n  const {view} = props;\n\n  useEffect(() => {\n    const basemapGallery = new esri.widgets.BasemapGallery({\n      view: view,\n      container: document.createElement(\"div\")\n    });\n\n    const bgExpand = new esri.widgets.Expand({\n      view: view,\n      content: basemapGallery\n    });\n\n    // close the expand whenever a basemap is selected\n    basemapGallery.watch(\"activeBasemap\", (e) => {\n      bgExpand.collapse();\n    });\n\n    view.ui.add(bgExpand, \"top-left\");\n\n    return () => {\n      view.ui.remove(bgExpand);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return null;\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React, {useState} from 'react'\nimport styles from \"./styles.module.css\";\nimport {ChromePicker, ColorResult, RGBColor} from 'react-color';\n\nexport interface IColorPickerButtonProps {\n  onChange: (color: RGBColor) => void;\n  color: RGBColor;\n}\n\nexport const ColorPickerButton = (props: IColorPickerButtonProps) => {\n  const [show, setShow] = useState(false);\n  const {color, onChange} = props;\n\n  const handleClick = () => {\n    setShow(!show);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (color: ColorResult) => {\n    onChange(color.rgb);\n  };\n\n  const colorStyle = {\n    background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`\n  };\n\n  return (\n    <div className={styles.picker}>\n      <div className={styles.swatch} onClick={handleClick}>\n        <span className={styles.color} style={colorStyle}/>\n      </div>\n      {show ?\n        <div className={styles.popover}>\n          <div className={styles.cover} onClick={handleClose}/>\n          <ChromePicker color={color} onChange={handleChange}/>\n        </div> :\n        null\n      }\n    </div>\n  )\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React, {ChangeEvent} from 'react';\nimport styles from \"./styles.module.css\";\nimport {faFill, faGripLines, faSlash} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {ColorPickerButton} from \"../../ColorPickerButton\";\nimport {useStores} from \"../../../stores/stores\";\nimport {observer} from \"mobx-react\";\nimport {RGBColor} from \"react-color\";\nimport {GraphicAdapter} from \"../../../utils/GraphicAdapter\";\n\nexport const FormattingWidget = observer(() => {\n  const {formattingStore} = useStores();\n\n  function setFillColor(color: RGBColor) {\n    formattingStore.setFillColor(color);\n    formattingStore.graphics.forEach(g => {\n      const adapter = GraphicAdapter.getAdapter(g);\n      adapter.setFillColor(color);\n    });\n  }\n\n  function setLineColor(color: RGBColor) {\n    formattingStore.setLineColor(color);\n    formattingStore.graphics.forEach(g => {\n      const adapter = GraphicAdapter.getAdapter(g);\n      adapter.setLineColor(color);\n    });\n  }\n\n  function setLineThickness(e: ChangeEvent<HTMLInputElement>) {\n    const thickness = Number(e.target.value);\n    formattingStore.setLineThickness(thickness);\n    formattingStore.graphics.forEach(g => {\n      const adapter = GraphicAdapter.getAdapter(g);\n      adapter.setLineThickness(thickness);\n    });\n  }\n\n  return (\n    <div className={styles.formattingWidget}>\n      <div className={styles.row}>\n        <span className={styles.button}><FontAwesomeIcon icon={faFill}/></span>\n        <ColorPickerButton onChange={setFillColor} color={formattingStore.fillColor}/>\n      </div>\n      <div className={styles.row}>\n        <span className={styles.button}><FontAwesomeIcon icon={faSlash}/></span>\n        <ColorPickerButton onChange={setLineColor} color={formattingStore.lineColor}/>\n      </div>\n      <div className={styles.row}>\n        <span className={styles.button}><FontAwesomeIcon icon={faGripLines}/></span>\n        <input className={styles.thickness}\n               type=\"number\"\n               min={0}\n               value={formattingStore.lineThickness}\n               onChange={setLineThickness}\n        />\n      </div>\n    </div>\n  );\n});\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {\n  RangeReference,\n  RealTimeString,\n  ReferenceSetEvent,\n  RemoteReferenceCreatedEvent,\n  StringInsertEvent,\n  StringRemoveEvent\n} from \"@convergence/convergence\";\nimport React, {useEffect, useRef} from \"react\";\nimport \"@convergence/html-text-collab-ext/css/html-text-collab-ext.css\";\nimport {colorAssigner} from \"../../utils/color-util\";\nimport styles from \"./styles.module.css\";\nimport {CollaborativeTextArea} from \"@convergence/html-text-collab-ext\";\n\nexport interface ICollaborativeTextarea {\n  stringModel: RealTimeString;\n  onChange: (value: string) => void;\n}\n\nexport const SharedTextArea = (props: ICollaborativeTextarea) => {\n  const taRef = useRef<HTMLTextAreaElement | null>(null);\n  const {stringModel} = props;\n\n  useEffect(() => {\n\n    const localReference = stringModel.rangeReference(\"selection\");\n\n    const textarea = taRef.current!;\n\n    // Set the initial data, and set the cursor to the beginning.\n    textarea.value = props.stringModel.value();\n    textarea.selectionStart = 0;\n    textarea.selectionEnd = 0;\n\n    textarea.addEventListener(\"blur\", () => {\n      if (localReference.isShared()) {\n        localReference.unshare();\n      }\n    });\n\n    textarea.addEventListener(\"focus\", () => {\n      sendLocalSelection();\n      if (!localReference.isShared()) {\n        localReference.share();\n      }\n    });\n\n    // Create the editor and set up two way data binding.\n    const textEditor = new CollaborativeTextArea({\n      control: textarea,\n      onInsert: (index: number, value: string) => stringModel.insert(index, value),\n      onDelete: (index: number, length: number) => stringModel.remove(index, length),\n      onSelectionChanged: sendLocalSelection\n    });\n\n    function sendLocalSelection() {\n      const selection = textEditor.selectionManager().getSelection();\n      localReference!.set({start: selection.anchor, end: selection.target});\n    }\n\n    const addSelection = (reference: RangeReference) => {\n      const color = colorAssigner.getColorAsHex(reference.user().userId.toGuid());\n\n      const remoteRange = reference.value();\n\n      const selectionManager = textEditor!.selectionManager();\n\n      selectionManager.addCollaborator(\n        reference.sessionId(),\n        reference.user().displayName!,\n        color,\n        {anchor: remoteRange.start, target: remoteRange.end});\n\n      reference.on(\"cleared\", () => selectionManager.removeCollaborator(reference.sessionId()));\n      reference.on(\"disposed\", () => selectionManager.removeCollaborator(reference.sessionId()));\n      reference.on(\"set\", (e) => {\n        if (e instanceof ReferenceSetEvent) {\n          const selection = reference.value();\n          const collaborator = selectionManager.getCollaborator(reference.sessionId());\n          collaborator.setSelection({anchor: selection.start, target: selection.end});\n          if (!e.synthetic) {\n            collaborator.flashCursorToolTip(2);\n          }\n        }\n      });\n    };\n\n    const stringEvents = stringModel.events().subscribe((e) => {\n      if (e instanceof StringInsertEvent) {\n        textEditor.insertText(e.index, e.value)\n      } else if (e instanceof StringRemoveEvent) {\n        textEditor.deleteText(e.index, e.value.length)\n      }\n    });\n\n    const references = stringModel.references({key: \"selection\"});\n    references.forEach((reference) => {\n      if (!reference.isLocal()) {\n        addSelection(reference);\n      }\n    });\n\n    sendLocalSelection();\n\n    const newReference = stringModel.events().subscribe( (e) => {\n      if (e instanceof RemoteReferenceCreatedEvent && e.reference.key() === \"selection\") {\n        addSelection(e.reference);\n      }\n    });\n\n    return () => {\n      if (!localReference.isDisposed()) {\n        localReference.dispose();\n      }\n      newReference.unsubscribe();\n      stringEvents.unsubscribe();\n    }\n    // eslint-disable-next-line\n  }, [stringModel]);\n\n  return <textarea className={styles.collabTextArea} ref={taRef}/>;\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React, {useState} from 'react';\nimport styles from \"./styles.module.css\";\nimport {observer} from \"mobx-react\";\nimport {useStores} from \"../../../stores/stores\";\nimport {SharedTextArea} from \"../../CollaborativeTextArea\";\nimport {GraphicAdapter} from \"../../../utils/GraphicAdapter\";\nimport {faChevronLeft, faEdit} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nexport const EditorWidget = observer(() => {\n\n  const {formattingStore} = useStores();\n\n  const [expanded, setExpanded] = useState(false);\n\n  if (formattingStore.graphics.length === 1) {\n    const g = formattingStore.graphics[0];\n    const adapter = GraphicAdapter.getAdapter(g);\n    const description = adapter.getDescriptionAttribute();\n    const title = adapter.getTitleAttribute();\n\n    const setDescription = (value: string) => {\n      g.setAttribute(\"description\", value);\n    };\n\n    const setTitle = (value: string) => {\n      g.setAttribute(\"title\", value);\n    };\n\n    const toggle = () => {\n      setExpanded(!expanded);\n    };\n    const icon = expanded ? faChevronLeft : faEdit;\n    const widgetClass = expanded ? styles.expanded : styles.collapsed;\n\n    return (\n      <div className={widgetClass}>\n        <div className={styles.expanderButton} onClick={toggle}>\n          <FontAwesomeIcon icon={icon}/>\n        </div>\n        <div className={styles.editorWidget}>\n          <div className={styles.title}>Edit Feature Details</div>\n\n          <div className={styles.titleInput}>\n            <div className={styles.label}>Title</div>\n            <SharedTextArea stringModel={title} onChange={setTitle}/>\n          </div>\n\n          <div className={styles.descriptionInput}>\n            <div className={styles.label}>Description</div>\n            <SharedTextArea stringModel={description} onChange={setDescription}/>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n});\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React from 'react';\nimport Graphic from \"esri/Graphic\";\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\";\nimport {esri} from \"../../../utils/ArcGisLoader\";\nimport {RemoteStateGraphic} from \"../RemoteStateGraphic\";\nimport {colorAssigner} from \"../../../utils/color-util\";\nimport {RemoteState} from \"../../../models/RemoteState\";\nimport Symbol from \"esri/symbols/Symbol\";\n\nexport interface IRemotePointerSketchProps {\n  layer: GraphicsLayer;\n  pointer: RemoteState<any>;\n}\n\nexport const RemoteSketchGraphic = (props: IRemotePointerSketchProps) => {\n  const {pointer, layer} = props;\n  return <RemoteStateGraphic\n    layer={layer}\n    item={pointer}\n    create={createSketch}\n    update={(state: RemoteState<any>, graphic: Graphic) => {\n      graphic.geometry = esri.geometry.support.jsonUtils.fromJSON(state.value);\n    }}\n  />;\n};\n\nfunction createSketch(sketch: RemoteState<any>): Graphic {\n  const geometry = esri.geometry.support.jsonUtils.fromJSON(sketch.value);\n  const {r, g, b} = colorAssigner.getColor(sketch.user.userId.toGuid());\n\n  let symbol: Symbol;\n\n  const lineSymbol = new esri.symbols.SimpleLineSymbol({\n    width: 1,\n    color: [r, g, b, 0.7]\n  });\n\n  if (geometry.type === \"polyline\") {\n    symbol = lineSymbol;\n  } else {\n    symbol = new esri.symbols.SimpleFillSymbol({\n      outline: lineSymbol,\n      color: [r, g, b, 0.25]\n    });\n  }\n\n  return new esri.Graphic({geometry, symbol});\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React from 'react';\nimport Map from \"esri/Map\";\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\";\nimport {RemoteStateLayer} from \"../RemoteStateLayer\";\nimport {RemoteState} from \"../../../models/RemoteState\";\nimport {RemoteSketchGraphic} from \"../RemoteSketchGraphic\";\n\nexport interface IRemotePointerLayerProps {\n  map: Map;\n  sketches: RemoteState<any>[]\n}\n\nexport const RemoteSketchLayer = (props: IRemotePointerLayerProps) => {\n  return <RemoteStateLayer\n    map={props.map}\n    remoteItems={props.sketches}\n    renderer={(p: RemoteState<any>, layer: GraphicsLayer) => <RemoteSketchGraphic key={p.sessionId}\n                                                                                layer={layer!}\n                                                                                pointer={p}/>\n    }\n  />;\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React, {useEffect, useRef, useState} from 'react';\nimport styles from \"./styles.module.css\";\nimport {esri} from \"../../../utils/ArcGisLoader\"\nimport {RemotePointerLayer} from \"../RemotePointerLayer\";\nimport MapView from \"esri/views/MapView\";\nimport {rateLimitWithCancel} from \"../../../utils/rateLimit\";\nimport {LatLongWidget} from \"../LatLongWidget\";\nimport {SketchWidget} from \"../SketchWidget\";\nimport {sketchStore, useStores} from \"../../../stores/stores\";\nimport {observer} from \"mobx-react\";\nimport {ParticipantActionType} from \"../../../models/ParticipantAction\";\nimport {RemoteSelectionLayer} from \"../RemoteSelectionLayer\";\nimport {BasemapWidget} from \"../BasemapWidget\";\nimport {FormattingWidget} from \"../FormatingWidget\";\nimport {EditorWidget} from \"../EditorWidget\";\nimport {RemoteSketchLayer} from \"../RemoteSketchLayer\";\n\nexport const MainArcGisMap = observer(() => {\n  const {pointerStore, viewportStore, participantStore, basemapStore} = useStores();\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [view, setView] = useState<MapView | null>(null);\n  const [previousExtent, setPreviousExtent] = useState<any>(null);\n  const [previousBasemap, setPreviousBasemap] = useState<any>(null);\n\n  useEffect(() => {\n    const map = new esri.Map({\n      basemap: new esri.Basemap({\n        portalItem: {\n          id: basemapStore.localState\n        }\n      })\n    });\n\n    const view = new esri.views.MapView({\n      map: map,  // References a Map instance\n      container: mapRef.current!,\n      center: [-30, 26],\n      zoom: 3\n    });\n\n    view.when(() => {\n      setView(view);\n    }).catch(e => console.log(e));\n\n    const pointerCallback = rateLimitWithCancel((event) => {\n      const point = view.toMap({x: event.x, y: event.y});\n      const {longitude, latitude} = point;\n\n      pointerStore.setLocalState({x: longitude, y: latitude});\n    }, 50);\n\n    const moveHandle = view.on(\"pointer-move\", pointerCallback.callback);\n    const leaveHandle = view.on(\"pointer-leave\", () => {\n      pointerCallback.cancel();\n      pointerStore.clearLocalState();\n    });\n\n    view.ui.components = [\"zoom\"];\n\n    const extentCallback = rateLimitWithCancel((e) => {\n      const {xmin, xmax, ymin, ymax} = e;\n      const extent = {xmin, xmax, ymin, ymax};\n      viewportStore.setLocalState(extent);\n    }, 50);\n    const extentHandle = esri.core.watchUtils.watch(view, \"extent\", extentCallback.callback);\n\n    const basemapHandle = esri.core.watchUtils.watch(view.map, \"basemap\", () => {\n      const basemap = view.map.basemap;\n      basemapStore.setLocalState(basemap.portalItem.id);\n    });\n\n    return () => {\n      moveHandle.remove();\n      leaveHandle.remove();\n      view.destroy();\n      map.destroy();\n      extentHandle.remove();\n      basemapHandle.remove();\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (!view) {\n      return;\n    }\n\n    if (participantStore.participantAction !== null) {\n      const remoteViewport = viewportStore.remoteStateMap.get(participantStore.participantAction.participant.sessionId);\n      const remoteBasemap = basemapStore.remoteStateMap.get(participantStore.participantAction.participant.sessionId);\n\n      if (participantStore.participantAction.actionType === ParticipantActionType.PREVIEW && previousExtent === null) {\n        setPreviousExtent(view.extent.toJSON());\n        setPreviousBasemap(view.map.basemap);\n      }\n\n      if (remoteViewport) {\n        const extent = {\n          ...remoteViewport.value, spatialReference: {\n            wkid: 102100\n          }\n        };\n\n        view.extent = new esri.geometry.Extent(extent);\n      }\n\n      if (remoteBasemap && view.map.basemap.portalItem.id !== remoteBasemap.value) {\n        view.map.basemap =  new esri.Basemap({\n          portalItem: {\n            id: remoteBasemap.value\n          }\n        });\n      }\n    } else {\n      if (previousExtent) {\n        const extent = {\n          ...previousExtent, spatialReference: {\n            wkid: 102100\n          }\n        };\n        view.extent = new esri.geometry.Extent(extent);\n        setPreviousExtent(null);\n      }\n\n      if (previousBasemap) {\n        view.map.basemap = previousBasemap;\n        setPreviousBasemap(null);\n      }\n    }\n    // eslint-disable-next-line\n  }, [participantStore.participantAction, view, viewportStore.remoteState, basemapStore.remoteState]);\n\n  const widgets = view !== null ?\n    <React.Fragment>\n      <LatLongWidget position={pointerStore.localState}/>\n      <BasemapWidget view={view}/>\n      <RemoteSelectionLayer mapView={view}/>\n      <SketchWidget view={view}/>\n      <FormattingWidget/>\n      <EditorWidget />\n      <RemoteSketchLayer map={view.map} sketches={sketchStore.remoteState}/>\n      <RemotePointerLayer map={view.map} pointers={pointerStore.remoteState}/>\n    </React.Fragment> : null;\n\n  return (\n    <React.Fragment>\n      <div className={styles.mainMap} ref={mapRef}/>\n      {widgets}\n    </React.Fragment>\n  );\n});\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React from 'react';\nimport Graphic from \"esri/Graphic\";\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\";\nimport {esri} from \"../../../utils/ArcGisLoader\";\nimport {RemoteStateGraphic} from \"../RemoteStateGraphic\";\nimport {colorAssigner} from \"../../../utils/color-util\";\nimport {IViewportExtent} from \"../../../models/IViewportExtent\";\nimport {RemoteState} from \"../../../models/RemoteState\";\n\nexport interface IRemoteViewportGraphicProps {\n  layer: GraphicsLayer;\n  viewport: RemoteState<IViewportExtent>;\n}\n\nexport const RemoteViewportGraphic = (props: IRemoteViewportGraphicProps) => {\n  const {viewport, layer} = props;\n  return <RemoteStateGraphic\n    layer={layer}\n    item={viewport}\n    create={createViewport}\n    update={(viewport: RemoteState<IViewportExtent>, graphic: Graphic) => {\n      graphic.geometry = new esri.geometry.Extent({...viewport.value, spatialReference: {\n          wkid: 102100\n        }});\n    }}\n  />;\n};\n\nfunction createViewport(viewport: RemoteState<IViewportExtent>): Graphic {\n  const geometry = new esri.geometry.Extent({...viewport.value, spatialReference: {\n      wkid: 102100\n    }});\n\n  const {r, g, b} = colorAssigner.getColor(viewport.user.userId.toGuid());\n  const symbol = new esri.symbols.SimpleFillSymbol({\n    outline: {\n      width: 1,\n      style: \"solid\",\n      color: [r, g, b, 0.8]\n    },\n    color: [r, g, b, 0.15]\n  });\n  return new esri.Graphic({geometry, symbol});\n}\n\n\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React from 'react';\nimport Map from \"esri/Map\";\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\";\nimport {RemoteStateLayer} from \"../RemoteStateLayer\";\nimport {RemoteViewportGraphic} from \"../RemoteViewportGraphic\";\nimport {IViewportExtent} from \"../../../models/IViewportExtent\";\nimport {RemoteState} from \"../../../models/RemoteState\";\n\nexport interface IRemoteViewportLayerProps {\n  map: Map;\n  viewports: RemoteState<IViewportExtent | null>[]\n}\n\nexport const RemoteViewportLayer = (props: IRemoteViewportLayerProps) => {\n  return <RemoteStateLayer\n    map={props.map}\n    remoteItems={props.viewports}\n    renderer={(p: RemoteState<IViewportExtent>, layer: GraphicsLayer) => <RemoteViewportGraphic key={p.sessionId}\n                                                                                  layer={layer!}\n                                                                                  viewport={p}/>\n    }\n  />;\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React, {useEffect, useRef, useState} from 'react';\nimport styles from \"./styles.module.css\";\nimport {esri} from \"../../../utils/ArcGisLoader\";\nimport {RemoteViewportLayer} from \"../RemoteViewportLayer\";\nimport MapView from \"esri/views/MapView\";\nimport {useStores} from \"../../../stores/stores\";\nimport {observer} from \"mobx-react\";\n\nexport const OverviewArcGisMap = observer(() => {\n  const mapRef = useRef<HTMLDivElement | null>(null);\n  const {viewportStore, basemapStore} = useStores();\n  const [open, setOpen] = useState(true);\n  const [view, setView] = useState<MapView | null>(null);\n\n  useEffect(() => {\n    const map = new esri.Map({\n      basemap: new esri.Basemap({\n        portalItem: {\n          id: basemapStore.localState || \"f81bc478e12c4f1691d0d7ab6361f5a6\"\n        }\n      })\n    });\n\n    const view = new esri.views.MapView({\n      map: map,\n      center: [-30, 26],\n      container: mapRef.current!,\n    });\n\n    view.ui.components = [];\n\n    // The only way to disable navigation is to block the events.\n    // So we disable the lot of them here.\n\n    view.on(\"drag\", function (event) {\n      event.stopPropagation();\n    });\n\n    view.on(\"key-down\", function (event) {\n      const prohibitedKeys = [\"+\", \"-\", \"Shift\", \"_\", \"=\"];\n      const keyPressed = event.key;\n      if (prohibitedKeys.indexOf(keyPressed) !== -1) {\n        event.stopPropagation();\n      }\n    });\n\n    view.on(\"mouse-wheel\", function (event) {\n      event.stopPropagation();\n    });\n\n    view.on(\"double-click\", function (event) {\n      event.stopPropagation();\n    });\n\n    view.on(\"drag\", [\"Shift\"], function (event) {\n      event.stopPropagation();\n    });\n\n    view.on(\"drag\", [\"Shift\", \"Control\"], function (event) {\n      event.stopPropagation();\n    });\n\n    view.when(() => {\n\n      setView(view);\n    });\n\n    return () => {\n      view.destroy();\n      map.destroy();\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (view) {\n      view.map.basemap = new esri.Basemap({\n        portalItem: {\n          id: basemapStore.localState\n        }\n      })\n    }\n  }, [basemapStore.localState, view]);\n\n  function toggle() {\n    setOpen(!open);\n  }\n\n  const viewportLayer = view !== null ?\n    <RemoteViewportLayer map={view.map} viewports={viewportStore.remoteState}/> : null;\n\n  return (\n    <React.Fragment>\n      <div className={open ? styles.opened : styles.closed}>\n        <div className={styles.map} ref={mapRef}/>\n        <div className={styles.toggle} onClick={toggle}>\n          <i className={styles.arrow}/>\n        </div>\n      </div>\n      {viewportLayer}\n    </React.Fragment>\n  );\n});\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React from \"react\";\n\nimport logo from \"../../assets/images/logo.png\";\nimport styles from \"./styles.module.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport {ToastContainer, toast} from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {faShareSquare, faExternalLinkAlt} from '@fortawesome/free-solid-svg-icons';\nimport {faGithub} from '@fortawesome/free-brands-svg-icons';\n\nimport CopyToClipboard from 'react-copy-to-clipboard';\n\nexport const TitleBar = () => {\n\n  function onNewWindow() {\n    window.open(window.location.href, \"_blank\");\n  }\n\n  function onCopy() {\n    toast.success(\"Share URL copied to clipboard!\");\n  }\n\n  return (\n    <div className={styles.titleBar}>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={2500}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable\n        pauseOnHover/>\n      <img className={styles.logo} src={logo} alt=\"Convergence Logo\"/>\n      <a className={styles.title} href=\"https://convergence.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <span>Convergence Geo Sketch</span>\n      </a>\n      <div className={styles.share}>\n        <a href=\"https://github.com/convergencelabs/geo-sketch-demo\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <span>Code <FontAwesomeIcon icon={faGithub}/></span>\n        </a>\n        <CopyToClipboard text={window.location.href} onCopy={onCopy}>\n          <span>Share <FontAwesomeIcon icon={faShareSquare}/></span>\n        </CopyToClipboard>\n        <span onClick={onNewWindow}>New Window <FontAwesomeIcon icon={faExternalLinkAlt}/></span>\n      </div>\n    </div>\n  );\n};","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React from \"react\";\nimport styles from \"./styles.module.css\";\nimport {GeoSketchSessionUser} from \"../../models/GeoSketchSessionUser\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faExternalLinkSquareAlt, faEye, faLink} from '@fortawesome/free-solid-svg-icons';\nimport {colorAssigner} from \"../../utils/color-util\";\n\nexport interface IPresenceItem {\n  user: GeoSketchSessionUser;\n  linkedUser: GeoSketchSessionUser | null;\n  onPreview: (user: GeoSketchSessionUser) => void;\n  onGoto: (user: GeoSketchSessionUser) => void;\n  onLink: (user: GeoSketchSessionUser) => void;\n  onClear: () => void;\n}\n\nexport const PresenceListItem = (props: IPresenceItem) => {\n  const {user, linkedUser, onPreview, onGoto, onLink, onClear} = props;\n\n  const color = colorAssigner.getColorAsHex(user.user.userId.toGuid());\n\n  const startPreview = () => {\n    if (!linkedUser) {\n      onPreview(user);\n    }\n  };\n\n  const endPreview = () => {\n    if (!linkedUser) {\n      onClear();\n    }\n  };\n\n  const goTo = () => {\n    if (!linkedUser) {\n      onGoto(user)\n    }\n  };\n\n  const toggleLinked = () => {\n    if (linkedUser === user) {\n      onClear();\n    } else {\n      onLink(user);\n    }\n  };\n\n  // const linked = ;\n\n  const className = linkedUser ? styles.disabled : styles.enabled;\n  const linkClass = user === linkedUser ? styles.linked : className;\n\n  const username = user.local ? user.user.displayName + \" (you)\" : user.user.displayName;\n  const actions = user.local ? null :\n    <React.Fragment>\n      <FontAwesomeIcon className={className}icon={faEye} size={\"xs\"} onMouseEnter={startPreview} onMouseLeave={endPreview}/>\n      <FontAwesomeIcon className={className} icon={faExternalLinkSquareAlt} size={\"xs\"} onClick={goTo}/>\n      <FontAwesomeIcon className={linkClass} icon={faLink} size={\"xs\"} onClick={toggleLinked}/>\n    </React.Fragment>;\n\n  return (\n    <div className={styles.presenceItem}>\n      <span className={styles.username} style={{borderColor: color}}>{username}</span>\n      {actions}\n    </div>\n  );\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React from \"react\";\nimport styles from \"./styles.module.css\";\nimport {PresenceListItem} from \"../PresenceListItem\";\nimport {useStores} from \"../../stores/stores\";\nimport {observer} from \"mobx-react\";\nimport {GeoSketchSessionUser} from \"../../models/GeoSketchSessionUser\";\nimport {ParticipantAction, ParticipantActionType} from \"../../models/ParticipantAction\";\n\nexport const PresenceList = observer(() => {\n  const {participantStore} = useStores();\n\n  const onPreview = (user: GeoSketchSessionUser) => {\n    participantStore.setParticipantAction(ParticipantAction.preview(user));\n  };\n\n  const onGoto = (user: GeoSketchSessionUser) => {\n    participantStore.setParticipantAction(ParticipantAction.goto(user));\n    setTimeout(() => {\n      participantStore.setParticipantAction(null);\n    }, 0);\n  };\n\n  const onLink = (user: GeoSketchSessionUser) => {\n    participantStore.setParticipantAction(ParticipantAction.link(user));\n  };\n\n  const onClear = () => {\n    participantStore.setParticipantAction(null);\n  };\n\n  const linkedUser = participantStore.participantAction?.actionType === ParticipantActionType.LINK ?\n    participantStore.participantAction.participant : null;\n\n  const users = Array.from(participantStore.participants.values());\n  users.sort(u => {\n    if (u.local) {\n      return -1;\n    } else {\n      return (u.user.displayName || \"\").localeCompare(u.user.displayName!);\n    }\n  })\n\n  const userComponents = users.map(u => <PresenceListItem\n    key={u.sessionId}\n    user={u}\n    linkedUser={linkedUser}\n    onPreview={onPreview}\n    onGoto={onGoto}\n    onLink={onLink}\n    onClear={onClear}\n  />);\n\n  return (\n    <div className={styles.presenceList}>\n      {userComponents}\n    </div>\n  );\n});\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React from \"react\";\nimport styles from \"./styles.module.css\";\nimport {ChatMessage} from \"../../models/ChatMessage\";\nimport moment from \"moment\";\nimport {colorAssigner} from \"../../utils/color-util\";\n\nexport interface IChatMessageProps {\n  message: ChatMessage;\n  online: boolean;\n}\n\nexport const ChatMessageItem = (props: IChatMessageProps) => {\n  const {message, online} = props;\n\n  const timestamp = moment(message.timestamp).format(\"hh:mma\");\n\n  const additionalStyles = online ?\n    {borderColor: colorAssigner.getColorAsHex(message.user.userId.toGuid())}\n    : {};\n\n  return (\n    <div className={styles.chatMessage}>\n      <div className={styles.meta}>\n        <span className={styles.username} style={additionalStyles}>{message.user.displayName}</span>\n        <span className={styles.timestamp}>{timestamp}</span>\n      </div>\n      <div className={styles.content}>{message.message}</div>\n    </div>\n  );\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React, {useEffect, useRef, useState} from \"react\";\nimport styles from \"./styles.module.css\";\nimport {observer} from \"mobx-react\";\nimport {useStores} from \"../../stores/stores\";\nimport {ChatMessageItem} from \"../ChatMessageItem\";\n\nexport const ChatMessages = observer(() => {\n  const {chatStore, participantStore} = useStores();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [messageCount, setMessageCount] = useState(0);\n\n  useEffect(() => {\n    if (messageCount < chatStore.messages.length) {\n      const container = containerRef.current!;\n      container.scrollTop = container.scrollHeight - container.clientHeight;\n      setMessageCount(chatStore.messages.length);\n    }\n  }, [chatStore.messages.length, messageCount]);\n\n  const participants = Array.from(participantStore.participants.values());\n\n  const messages = chatStore.messages.map(m => {\n    const online = participants.find(p => p.user.userId.equals(m.user.userId)) !== undefined;\n    return <ChatMessageItem key={m.eventId} message={m} online={online}/>;\n  });\n\n  return (\n    <div className={styles.container} ref={containerRef}>\n      <div className={styles.chatMessages}>\n        {messages}\n      </div>\n    </div>\n  );\n});\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React, {KeyboardEvent, useRef} from \"react\";\nimport styles from \"./styles.module.css\";\nimport {useStores} from \"../../stores/stores\";\n\nexport const ChatInput = () => {\n  const {chatStore} = useStores();\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.keyCode === 13 && !event.shiftKey && inputRef.current!.value !== \"\") {\n      chatStore.sedMessage(inputRef.current!.value);\n      inputRef.current!.value = \"\";\n      event.preventDefault();\n    }\n  };\n\n  return (\n    <div className={styles.chatInput}>\n        <textarea\n          placeholder=\"Send Message\"\n          ref={inputRef}\n          onKeyDown={handleKeyDown}\n          rows={3}\n        />\n    </div>\n  );\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React from \"react\";\nimport styles from \"./styles.module.css\";\nimport {ChatMessages} from \"../ChatMessages\";\nimport {ChatInput} from \"../ChatInput\";\n\nexport const ChatPanel = () => {\n  return (\n    <div className={styles.chatPanel}>\n      <ChatMessages/>\n      <ChatInput/>\n    </div>\n  );\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React from \"react\";\nimport styles from \"./styles.module.css\";\n\nexport interface ISideBarTitleProps {\n  title: string;\n}\n\nexport const SideBarTitle = (props: ISideBarTitleProps) => {\n  return (\n    <div className={styles.title}>{props.title}\n    </div>\n  );\n};","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React, {useState} from \"react\";\nimport styles from \"./styles.module.css\";\nimport {PresenceList} from \"../PresenceList\";\nimport {ChatPanel} from \"../ChatPanel\";\nimport {SideBarTitle} from \"../SideBarTitle\";\n\n\nexport const SideBar = () => {\n  const [open, setOpen] = useState(true);\n\n  const toggle = () => setOpen(!open)\n\n  return (\n    <div className={open ? styles.sideBarOpen : styles.sideBarClosed}>\n      <span className={styles.toggle} onClick={toggle}>\n        <span className={styles.toggleInner}>\n          <span className={styles.arrow}/>\n        </span>\n      </span>\n      <SideBarTitle title=\"Participants\"/>\n      <PresenceList/>\n      <SideBarTitle title=\"Group Chat\"/>\n      <ChatPanel/>\n    </div>\n  );\n};","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React, {ChangeEvent, useState} from 'react';\nimport styles from \"./styles.module.css\";\nimport logo from \"../../assets/images/logo.png\";\n\nexport interface ILoginProps {\n  onLogin: (username: string) => void;\n  error?: string;\n}\n\nexport const Login = (props: ILoginProps) => {\n  const [username, setUsername] = useState(\"\");\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setUsername(e.target.value);\n  };\n\n  const onClick = () => {\n    props.onLogin(username);\n  };\n\n  return (\n    <div className={styles.login}>\n      <div className={styles.title}>\n        <img src={logo} alt=\"Convergence Logo\"/>\n        <span className={styles.name}>Convergence Geo Sketch</span>\n      </div>\n      <div className={styles.form}>\n        <label className={styles.label}>Username</label>\n        <input id=\"username\" value={username} onChange={onChange}/>\n      </div>\n      <div className={styles.note}>(Note: Any username will work!)</div>\n      <div className={styles.buttons}>\n        <button className={styles.button} disabled={username === \"\"} onClick={onClick}>Login</button>\n      </div>\n    </div>\n  );\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nexport interface IGeoSketchDemoConfig {\n  baseUrl: string;\n  domainUrl: string;\n}\n\ndeclare const GEO_SKETCH_DEMO_CONFIG: IGeoSketchDemoConfig;\n\nif (GEO_SKETCH_DEMO_CONFIG === undefined) {\n  throw new Error(\"GEO_SKETCH_DEMO_CONFIG was not defined.\")\n}\n\nif (GEO_SKETCH_DEMO_CONFIG.domainUrl === undefined) {\n  throw new Error(\"CONVERGENCE_ADMIN_CONSOLE_CONFIG.restApiUrl was not defined.\");\n}\n\n\nconst config = {...GEO_SKETCH_DEMO_CONFIG};\nexport const GeoSketchDemoConfig: IGeoSketchDemoConfig = config;\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {ChatRoom, Convergence, LogLevel} from \"@convergence/convergence\";\nimport {GeoSketchDemoConfig} from \"../constants/config\";\nimport {IStores} from \"../stores/stores\";\n\nConvergence.configureLogging({\n  root: LogLevel.WARN\n});\n\nexport class ConnectionManager {\n  constructor(private demoId: string, private stores: IStores) {\n  }\n\n  public async connect(displayName: string): Promise<void> {\n    const domain = await Convergence.connectAnonymously(GeoSketchDemoConfig.domainUrl, displayName);\n\n    const activity = await domain.activities().join(this.demoId);\n    this.stores.pointerStore.setActivity(activity);\n    this.stores.viewportStore.setActivity(activity);\n    this.stores.basemapStore.setActivity(activity);\n    this.stores.participantStore.setActivity(activity);\n    this.stores.sketchStore.setActivity(activity);\n\n    const model = await domain.models().openAutoCreate({\n      collection: \"maps\",\n      id: this.demoId,\n      data: () => {\n        return {\n          features: {}\n        };\n      },\n      ephemeral: true\n    });\n    this.stores.modelStore.setModel(model);\n\n    const roomId = await domain.chat().create({\n      id: this.demoId,\n      type: \"room\",\n      membership: \"public\",\n      ignoreExistsError: true\n    });\n\n    const room = (await domain.chat().join(roomId)) as ChatRoom;\n\n    this.stores.chatStore.setChatRoom(room);\n  }\n}\n\n\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React, {useEffect, useState} from 'react';\nimport {MainArcGisMap} from \"../arcgis/MainArcGisMap\";\nimport {OverviewArcGisMap} from \"../arcgis/OverviewArcGisMap\";\nimport {TitleBar} from \"../TitleBar\";\nimport styles from \"./styles.module.css\";\nimport {SideBar} from \"../SideBar\";\nimport {Login} from \"../Login\";\nimport {ConnectionManager} from \"../../utils/ConnectionManager\";\nimport {useStores} from \"../../stores/stores\";\n\nexport interface IGeoSketchProps {\n  urlUsername: string | null;\n  demoId: string;\n}\n\nexport const GeoSketch = (props: IGeoSketchProps) => {\n  const [username, setUsername] = useState<string | null>(props.urlUsername);\n  const [connected, setConnected] = useState<boolean>(false);\n  const [loginError, setLoginError] = useState<string | undefined>();\n  const stores = useStores();\n  const [connectionManager] = useState(new ConnectionManager(props.demoId,stores));\n\n  const onLogin = (username: string) => {\n    setUsername(username);\n  };\n\n  useEffect(() => {\n    if (username !== null) {\n      connectionManager.connect(username)\n        .catch((e: Error) => {\n          setLoginError(e.message || \"Unknown login error\");\n          console.log(e);\n        })\n        .then(() => {\n          setConnected(true);\n        });\n    }\n  }, [username, connectionManager]);\n\n  if (!connected) {\n    return <Login onLogin={onLogin} error={loginError}/>;\n  } else {\n    return (\n      <div className={styles.GeoSketch}>\n        <TitleBar/>\n        <div className={styles.main}>\n          <div className={styles.map}>\n            <MainArcGisMap/>\n            <OverviewArcGisMap/>\n          </div>\n          <SideBar/>\n        </div>\n      </div>\n    );\n  }\n};\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Index is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GeoSketch} from './components/GeoSketch';\nimport * as serviceWorker from './serviceWorker';\nimport {ArcGisLoader} from \"./utils/ArcGisLoader\";\nimport {getDemoId} from \"./utils/example-id.js\";\nimport 'mobx-react-lite/batchingForReactDom';\n\nconst url = new URL(window.location.href);\nconst username = url.searchParams.get(\"username\");\nconst demoId = getDemoId();\n\nArcGisLoader.init()\n  .then(() => {\n    ReactDOM.render(\n      <GeoSketch demoId={demoId} urlUsername={username}/>\n      ,\n      document.getElementById('root')\n    );\n  });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/*\n * Copyright (c) 2020 Convergence Labs, Inc.\n *\n * This file is part of the Convergence Chat Demo, which is released under\n * the terms of the MIT License. A copy of the MIT should have been provided\n * along with this file, typically located in the \"LICENSE\" file, which is part\n * of this source code package. Alternatively, see\n * <https://opensource.org/licenses/MIT> for the full text of theMIT license,\n *  if it was not provided.\n */\n\nimport {createUUID} from \"./uuid\";\n\nexport function getDemoId() {\n  const url = new URL(window.location.href);\n  let id = url.searchParams.get('id');\n  if (!id) {\n    id = createUUID();\n    url.searchParams.append('id', id);\n    window.history.pushState({}, \"\", url.href);\n  }\n  return id;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"picker\":\"styles_picker__1yrHC\",\"swatch\":\"styles_swatch__3quun\",\"color\":\"styles_color__2aFS8\",\"popover\":\"styles_popover__2doJr\",\"cover\":\"styles_cover__1_6vr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"opened\":\"styles_opened__3uJcd\",\"map\":\"styles_map__36_lR\",\"closed\":\"styles_closed__UWbQT\",\"toggle\":\"styles_toggle__SSmfT\",\"arrow\":\"styles_arrow__3ZLPF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBarClosed\":\"styles_sideBarClosed__3VvnT\",\"sideBarOpen\":\"styles_sideBarOpen__sz0xt\",\"toggle\":\"styles_toggle__3MZQH\",\"arrow\":\"styles_arrow__b1d5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"presenceItem\":\"styles_presenceItem__1YiVl\",\"username\":\"styles_username__354DQ\",\"enabled\":\"styles_enabled__1a-Ym\",\"linked\":\"styles_linked__31eKP\",\"disabled\":\"styles_disabled__2Lp-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatMessage\":\"styles_chatMessage__3FD2C\",\"meta\":\"styles_meta__3jYrU\",\"username\":\"styles_username__1Npjq\",\"timestamp\":\"styles_timestamp__VKsQw\",\"content\":\"styles_content__2uqgt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleBar\":\"styles_titleBar__3qreC\",\"logo\":\"styles_logo__1-aij\",\"title\":\"styles_title__3yLnz\",\"share\":\"styles_share__EVFyq\"};","module.exports = __webpack_public_path__ + \"static/media/logo.33ed6632.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GeoSketch\":\"styles_GeoSketch__3bLLn\",\"main\":\"styles_main__2TQA6\",\"map\":\"styles_map__1N48Z\"};"],"sourceRoot":""}